{"version":3,"sources":["components/SideBar.js","components/Cliente.js","components/Certificacion.js","components/Control.js","components/Cotizacion.js","components/DatosControl.js","components/DatosCotizacion.js","components/List_docs.js","components/Proyecto.js","components/Remitos.js","components/DatosRemitos.js","components/DatosCertificacion.js","components/BusquedaCodigoUnificador.js","components/form/FormCodigoUnificador.js","components/codigoUnificadorContainer.js","components/button/sendDataButton.js","components/GenerarDatosControl.js","components/generarDatosControlContainer.js","components/certificacionAutomaticaTable.js","components/certificacionAutomatica.js","components/button/sendDataButtonCertificacionAutomatica.js","components/SearchRemitosCU.js","components/searchRemitosCodUni.js","components/TreeRemitos.js","components/form/SearchRemitos.js","components/searchRemitos.js","components/TreeCertificacion.js","components/doCertificacion.js","components/form/SearchCertificacion.js","components/searchCertificacion.js","App.js","serviceWorker.js","index.js"],"names":["SideBar","className","to","aria-hidden","Component","jobs","cellEditProp","mode","blurToSave","afterSaveCell","row","cellName","cellValue","a","async","settings","method","body","JSON","stringify","headers","Accept","url","id","fetch","fetchResponse","json","data","console","log","selectRowProp","options","page","sizePerPageList","text","value","sizePerPage","pageStartIndex","paginationSize","prePage","nextPage","firstPage","lastPage","prePageTitle","nextPageTitle","firstPageTitle","lastPageTitle","paginationPosition","afterDeleteRow","rowKeys","rows","i","length","afterInsertRow","cliente","props","callApi","response","status","Error","message","push","nombre","codigoCliente","formatType","bind","this","then","res","setState","catch","err","cell","cellEdit","insertRow","pagination","exportCSV","deleteRow","selectRow","dataField","isKey","autoValue","filter","type","delay","numberComparators","editable","React","jobTypesCotizacion","jobTypesControl","fechaDeEmision","moment","format","jobStatusValidator","isNaN","parseInt","certificacion","sendData","fecha1","control_id","control_cotizacion_id","numeroDePedido","proyecto","especialidad","codigo_unificador","moneda","callApiDroopCotizacion","titulo_cotiazacion","callApiDroopControl","numero_control","prevProps","validator","values","jobTypes","fecha_emision_proyectada","fecha_calificaion","control","fecha3","cotizacion_id","revision","numero_documento","numero_doc","codigo_doc_cliente","callApiDroop","fecha","Cotizacion","cliente_id","jobTypesDocumentos","datosControl","descripcion_doc","revicion","cantidad_doc","HHUnidades","total","observacion","HH_asociado","proveedor","viatico","list_docs_id","callApiDroopDocumentos","mergeNombre","titulo_documento","datosCotizacion","numeroRecotizacion","proveerdor","list_docs","cantidad_de_doc","total_hh","lista_de_cable","jobTypesCliente","fecha_fin","fehca_inicio","fecha2","numero_proyecto","activo","callApiDroopCliente","fecha_envio","remito","jobTypesRemitos","remitos_id","calificacion","remitos_control_id","remitos_control_cotizacion_id","callApiDroopRemitos","jobTypesCertificacion","datosCertificacion","certificacion_id","certificacion_control_id","certificacion_control_cotizacion_id","costoHoraDoc","cantidadDeHoras","cantidadDeDocs","porcentajeAvanceAnterior","porcentajeAvancePrecente","porcentajeAvanceAcumulado","total_certificacion","callApiDroopCertificacion","NameForm","searchData","searchCodigoUnificador","changeLink","state","onClick","handleChange","target","onSubmit","handleSubmit","onChange","formContainer","SendDataButton","window","confirm","idSend","alert","searchDataId","clickToSelect","onSelect","isSelected","e","rowIndex","dataSelected","generarDatosControl","idSearch","test","inputSend","y","onKeyUp","Tree","getAllDocsForCotizacion","mapCotizacion","Map","cotizacionData","id_cotizacion","dataMapValue","map","index","array","has","set","title","cotizacionIdlId","cotizacionId","children","idContizacion","getAllDocsForControl","mapControl","controlData","contro_id","controlId","idControl","formatData","idCotizacion","id_control","result","treeData","control_data","id_remito","cotizaicon_data","remitoId","style","height","TreeCertificacion","dataId","controId","getAllDocsForCertificacion","id_certifiacion","certificacion_data","clienteData","certificacionId","doCertificacion","updateAvance","porcentajeAvance","certificarData","array1","array2","porcentajeAvanceSend","items","key","defaultValue","listItems","App","exact","path","component","Proyecto","Cliente","Certificacion","Control","DatosControl","DatosCotiazacion","List_docs","Remitos","DatosCertificacion","DatosRemitos","codigoUnificadorContainer","generarDatosControlContainer","certificacionAutomatica","searchRemitosCodUni","searchRemitos","searchCertificacion","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.3211a4b9.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport '../styles/SideBar.css';\nimport {Link} from \"react-router-dom\";\n\nexport default class SideBar extends Component {\n    render() {\n        return (\n            <div className=\"sidebar-container sticky-top\">\n                <div className=\"sidebar-logo\">\n                    Ingecoop Alpha\n                </div>\n            <ul className=\"sidebar-navigation\">\n                <li className=\"header\">Navigation</li>\n                <li>\n                    <Link to=\"/\">\n                        <i className=\"fa fa-home\" aria-hidden=\"true\"></i>Listado de Proyecto\n                    </Link>\n                </li>\n                <li>\n                    <Link to=\"/Cliente\">\n                        <i className=\"fa fa-tachometer\" aria-hidden=\"true\"></i>Listado de Cliente\n                    </Link>\n                </li>\n                <li>\n                    <Link to=\"/Cotizacion\">\n                        <i className=\"fa fa-users\" aria-hidden=\"true\"></i>Listado de Cotizacion\n                    </Link>\n                </li>\n                <li>\n                    <Link to=\"/Control\">\n                        <i className=\"fa fa-cog\" aria-hidden=\"true\"></i>Listado de Control\n                    </Link>\n                </li>\n                <li>\n                    <Link to=\"/Certificacion\">\n                        <i className=\"fa fa-info-circle\" aria-hidden=\"true\"></i>Listado de Certificacion\n                    </Link>\n                </li>\n                <li>\n                    <Link to=\"/DatosCotizacion\">\n                        <i className=\"fa fa-info-circle\" aria-hidden=\"true\"></i>Listado de Datos de Cotizacion\n                    </Link>\n                </li>\n                <li>\n                    <Link to=\"/DatosControl\">\n                        <i className=\"fa fa-info-circle\" aria-hidden=\"true\"></i>Listado de Datos de Control\n                    </Link>\n                </li>\n                <li>\n                    <Link to=\"/ListDocs\">\n                        <i className=\"fa fa-info-circle\" aria-hidden=\"true\"></i> Lista de documentos\n                    </Link>\n                </li>\n                <li>\n                    <Link to=\"/Remitos\">\n                        <i className=\"fa fa-info-circle\" aria-hidden=\"true\"></i> Lista de remitos\n                    </Link>\n                </li>\n                <li>\n                    <Link to=\"/DatosCertificacion\">\n                        <i className=\"fa fa-info-circle\" aria-hidden=\"true\"></i> Lista de Datos de Certificacion\n                    </Link>\n                </li>\n                <li>\n                    <Link to=\"/DatosRemitos\">\n                        <i className=\"fa fa-info-circle\" aria-hidden=\"true\"></i> Lista de Datos de Remitos\n                    </Link>\n                </li>\n                <li className=\"header\">Busquedas</li>\n                <li>\n                <Link to=\"/codigoUnificadorContainer\">\n                    <i className=\"fa fa-info-circle\" aria-hidden=\"true\"></i> Busqueda Codigo Unificador\n                </Link>\n                </li>\n                <li>\n                <Link to=\"/generarDatosControlContainer\">\n                    <i className=\"fa fa-info-circle\" aria-hidden=\"true\"></i> Generar Datos Control\n                </Link>\n                </li>\n                <li>\n                <Link to=\"/certificacionAutomatica\">\n                    <i className=\"fa fa-info-circle\" aria-hidden=\"true\"></i> Certificacion automatica\n                </Link>\n                </li>\n                <li>\n                <Link to=\"/searchRemitosCodUni\">\n                    <i className=\"fa fa-info-circle\" aria-hidden=\"true\"></i> Remitos Codigo Unificador\n                </Link>\n                </li>\n            </ul>\n            </div>\n      );\n    }\n}\n\n\n/**\n * <li>\n                <Link to=\"/searchRemitos\">\n                    <i className=\"fa fa-info-circle\" aria-hidden=\"true\"></i> Remitos\n                </Link>\n                </li>\n                <li>\n                <Link to=\"/searchCertificacion\">\n                    <i className=\"fa fa-info-circle\" aria-hidden=\"true\"></i> Certificacion\n                </Link>\n                </li>\n * \n */","/* eslint max-len: 0 */\n/* eslint no-console: 0 */\nimport React from 'react';\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\nimport '../styles/react-bootstrap-table.css';\nimport '../styles/fix.css';\n\nlet jobs = [];\n\nconst cellEditProp = {\n  mode: 'click',\n  blurToSave: true,\n  afterSaveCell: onAfterSaveCell\n};\nconst selectRowProp = {\n  mode: 'checkbox'\n};\nfunction jobStatusValidator(value, row) {\n  const nan = isNaN(parseInt(value, 10));\n  if (nan) {\n    return 'Job Status must be a integer!';\n  }\n  return true;\n}\nasync function onAfterSaveCell(row, cellName, cellValue) {\n  const settings = {\n    method: 'PUT',\n    body: JSON.stringify(row),\n    headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n    }\n  };\n  let url = \"/cliente/\" + row.id;\n  try {\n      const fetchResponse = await fetch(url, settings);\n      const data = await fetchResponse.json();\n      console.log(data);\n  } catch (e) {\n    console.log(e);\n  }\n}\n\n\nasync function onAfterInsertRow(row) {\n  const settings = {\n    method: 'POST',\n    body: JSON.stringify(row),\n    headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n    }\n  };\n  try {\n      const fetchResponse = await fetch(`/cliente`, settings);\n      const data = await fetchResponse.json();\n      console.log(data);\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nasync function onAfterDeleteRow(rowKeys,rows) {\n  for(let i = 0; i<rowKeys.length; i++){\n    let url = '/cliente/' + rows[i].id;\n    const settings = {\n    method: 'DELETE'\n    };\n    try {\n        const fetchResponse = await fetch(url, settings);\n        const data = await fetchResponse.json();\n        console.log(data);\n    } catch (e) {\n      console.log(e);\n    }\n  }\n}\nconst options = {\n  page: 1,  // which page you want to show as default\n  sizePerPageList: [ {\n    text: 5, value: 5\n  },\n  {\n    text: 10, value: 10\n  },\n  {\n    text: 15, value: 15\n  },\n  {\n    text: 20, value: 20\n  },\n  {\n    text: 30, value: 30\n  },\n  {\n    text: 40, value: 40\n  },\n  {\n    text: 50, value: 50\n  }/*,\n  {\n    text: 'All', value: jobs.length\n  }*/ ], // you can change the dropdown list for size per page\n  sizePerPage: 50,  // which size per page you want to locate as default\n  pageStartIndex: 1, // where to start counting the pages\n  paginationSize: 3,  // the pagination bar size.\n  prePage: 'Prev', // Previous page button text\n  nextPage: 'Next', // Next page button text\n  firstPage: 'First', // First page button text\n  lastPage: 'Last', // Last page button text\n  prePageTitle: 'Go to previous', // Previous page button title\n  nextPageTitle: 'Go to next', // Next page button title\n  firstPageTitle: 'Go to first', // First page button title\n  lastPageTitle: 'Go to Last', // Last page button title\n  paginationPosition: 'bottom',  // default is bottom, top and both is all available\n  // keepSizePerPageState: true //default is false, enable will keep sizePerPage dropdown state(open/clode) when external rerender happened\n  // hideSizePerPage: true > You can hide the dropdown for sizePerPage\n  // alwaysShowAllBtns: true // Always show next and previous button\n  // withFirstAndLast: false > Hide the going to First and Last page button\n  // hidePageListOnlyOnePage: true > Hide the page list if only one page.\n  afterDeleteRow: onAfterDeleteRow,\n  afterInsertRow: onAfterInsertRow\n};\n\nexport default class cliente extends React.Component {\n  constructor(props) {\n    super(props);\n    this.formatType = this.formatType.bind(this);\n  }\n  componentDidMount() {\n    this.callApi()\n      .then(res => this.setState({ response: res }))\n      .catch(err => console.log(err));\n  }\n\n  formatType(cell) {\n    return `TYPE_${cell}`;\n  }\n\n  callApi = async () => {\n    jobs = [];\n    const response = await fetch('/cliente');\n    var data = await response.json();\n    if (response.status !== 200) throw Error(data.message);\n    for (let i = 0; i < data.length; i++) {\n      jobs.push({\n        id: data[i].id,\n        nombre: data[i].nombre,\n        codigoCliente: data[i].codigoCliente\n      });\n    }\n  }\n\n  render() {\n    return (\n      <BootstrapTable data={ jobs } cellEdit={ cellEditProp } insertRow={ true } pagination={ true } options={ options } exportCSV={ true } deleteRow={ true } selectRow={ selectRowProp }>\n        <TableHeaderColumn dataField='id' isKey={ true } autoValue={ true } filter={ { type: 'NumberFilter', delay: 1000, numberComparators: [ '=', '>', '<=' ] } }>ID</TableHeaderColumn>\n        <TableHeaderColumn dataField='nombre' editable={ { type: 'input' } } filter={ { type: 'TextFilter', delay: 1000 } }>Nombre</TableHeaderColumn>\n        <TableHeaderColumn dataField='codigoCliente' editable={ { type: 'input' } } filter={ { type: 'TextFilter', delay: 1000 } }>codigoCliente</TableHeaderColumn>\n      </BootstrapTable>\n    );\n  }\n}\n","/* eslint max-len: 0 */\n/* eslint no-console: 0 */\nimport React from 'react';\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\nimport '../styles/react-bootstrap-table.css';\nimport moment from 'moment';\n\n\nlet jobs = [];\nlet jobTypesCotizacion = [];\nlet jobTypesControl = [];\n\nconst cellEditProp = {\n  mode: 'click',\n  blurToSave: true,\n  afterSaveCell: onAfterSaveCell\n};\nconst selectRowProp = {\n  mode: 'checkbox'\n};\n\nfunction jobStatusValidator(value, row) {\n  const nan = isNaN(parseInt(value, 10));\n  if (nan) {\n    return 'Job Status must be a integer!';\n  }\n  return true;\n}\n\nasync function onAfterSaveCell(row, cellName, cellValue) {\n  if(cellName === \"fechaDeEmision\"){\n    row.fechaDeEmision = moment(cellValue).format('YYYY-MM-DD');\n  }\n  const settings = {\n    method: 'PUT',\n    body: JSON.stringify(row),\n    headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n    }\n  };\n  let url = \"/certificacion/\" + row.id;\n  try {\n      const fetchResponse = await fetch(url, settings);\n      const data = await fetchResponse.json();\n      console.log(data);\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nasync function onAfterInsertRow(row) {\n  const settings = {\n    method: 'POST',\n    body: JSON.stringify(row),\n    headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n    }\n  };\n  try {\n      const fetchResponse = await fetch(`/certificacion`, settings);\n      const data = await fetchResponse.json();\n      console.log(data);\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nasync function onAfterDeleteRow(rowKeys,rows) {\n  for(let i = 0; i<rowKeys.length; i++){\n    let url = '/certificacion/' + rows[i].id;\n    const settings = {\n    method: 'DELETE'\n    };\n    try {\n        const fetchResponse = await fetch(url, settings);\n        const data = await fetchResponse.json();\n        console.log(data);\n    } catch (e) {\n      console.log(e);\n    }\n  }\n}\n\nconst options = {\n  page: 1,  // which page you want to show as default\n  sizePerPageList: [ {\n    text: 5, value: 5\n  },\n  {\n    text: 10, value: 10\n  },\n  {\n    text: 15, value: 15\n  },\n  {\n    text: 20, value: 20\n  },\n  {\n    text: 30, value: 30\n  },\n  {\n    text: 40, value: 40\n  },\n  {\n    text: 50, value: 50\n  }/*,\n  {\n    text: 'All', value: jobs.length\n  }*/ ], // you can change the dropdown list for size per page\n  sizePerPage: 50,  // which size per page you want to locate as default\n  pageStartIndex: 1, // where to start counting the pages\n  paginationSize: 3,  // the pagination bar size.\n  prePage: 'Prev', // Previous page button text\n  nextPage: 'Next', // Next page button text\n  firstPage: 'First', // First page button text\n  lastPage: 'Last', // Last page button text\n  prePageTitle: 'Go to previous', // Previous page button title\n  nextPageTitle: 'Go to next', // Next page button title\n  firstPageTitle: 'Go to first', // First page button title\n  lastPageTitle: 'Go to Last', // Last page button title\n  paginationPosition: 'bottom',  // default is bottom, top and both is all available\n  // keepSizePerPageState: true //default is false, enable will keep sizePerPage dropdown state(open/clode) when external rerender happened\n  // hideSizePerPage: true > You can hide the dropdown for sizePerPage\n  // alwaysShowAllBtns: true // Always show next and previous button\n  // withFirstAndLast: false > Hide the going to First and Last page button\n  // hidePageListOnlyOnePage: true > Hide the page list if only one page.\n  afterDeleteRow: onAfterDeleteRow,\n  afterInsertRow: onAfterInsertRow\n  //handleConfirmDeleteRow: customConfirm REVISTAR CONFIRM\n};\n\nexport default class certificacion extends React.Component {\n  constructor(props) {\n    super(props);\n    this.formatType = this.formatType.bind(this);\n  }\n\n  formatType(cell) {\n    return `TYPE_${cell}`;\n  }\n\n  componentDidMount() {\n    this.callApi()\n      .then(res => this.setState({ response: res }))\n      .catch(err => console.log(err));\n    this.callApiDroopCotizacion()\n      .then(res => this.setState({ response: res }))\n      .catch(err => console.log(err));\n    this.callApiDroopControl()\n      .then(res => this.setState({ response: res }))\n      .catch(err => console.log(err));\n  }\n\n  componentDidUpdate(prevProps) {\n    // Uso tipico (no olvides de comparar los props):\n    if (this.props.sendData !== prevProps.sendData) {\n      this.callApi();\n    }\n  }\n  \n  callApi = async () => {\n    if(this.props.sendData){\n      jobs = [];\n      const response = await fetch('/certificacion/codigoUnificador/'+this.props.sendData);\n      var data = await response.json();\n      if (response.status !== 200) throw Error(data.message);\n      for (let i = 0; i < data.length; i++) {\n        let fecha1 = moment(data[i].fechaDeEmision).format('YYYY-MM-DD');\n        jobs.push({\n          id: data[i].id,\n          control_id: data[i].control_id,\n          control_cotizacion_id: data[i].control_cotizacion_id,\n          numeroDePedido: data[i].numeroDePedido,\n          proyecto: data[i].proyecto,\n          especialidad: data[i].especialidad,\n          fechaDeEmision: fecha1,\n          codigo_unificador: data[i].codigo_unificador,\n          moneda: data[i].moneda\n        });\n      }\n    }else{\n      jobs = [];\n      const response = await fetch('/certificacion');\n      var data = await response.json();\n      if (response.status !== 200) throw Error(data.message);\n      for (let i = 0; i < data.length; i++) {\n        let fecha1 = moment(data[i].fechaDeEmision).format('YYYY-MM-DD');\n        jobs.push({\n          id: data[i].id,\n          control_id: data[i].control_id,\n          control_cotizacion_id: data[i].control_cotizacion_id,\n          numeroDePedido: data[i].numeroDePedido,\n          proyecto: data[i].proyecto,\n          especialidad: data[i].especialidad,\n          fechaDeEmision: fecha1,\n          codigo_unificador: data[i].codigo_unificador,\n          moneda: data[i].moneda\n        });\n      }\n    }\n  }\n  callApiDroopCotizacion = async () => {\n    const response = await fetch('/cotizacion');\n    var data = await response.json();\n    if (response.status !== 200) throw Error(data.message);\n    for (let i = 0; i < data.length; i++) {\n      jobTypesCotizacion.push({\n        value: data[i].id,\n        text: data[i].titulo_cotiazacion\n      });\n    }\n  }\n\n  callApiDroopControl = async () => {\n    const response = await fetch('/control');\n    var data = await response.json();\n    if (response.status !== 200) throw Error(data.message);\n    for (let i = 0; i < data.length; i++) {\n      jobTypesControl.push({\n        value: data[i].id,\n        text: data[i].numero_control\n      });\n    }\n  }\n\n  render() {\n    // custom attributes on editor\n    return (\n      <BootstrapTable data={ jobs } cellEdit={ cellEditProp } insertRow={ true } pagination={ true } options={ options } exportCSV={ true } deleteRow={ true } selectRow={ selectRowProp }>\n        <TableHeaderColumn dataField='id' isKey={ true } autoValue={ true } filter={ { type: 'NumberFilter', delay: 1000, numberComparators: [ '=', '>', '<=' ] } }>ID</TableHeaderColumn>\n        <TableHeaderColumn dataField='control_id' editable={ { validator: jobStatusValidator,type: 'select', options: { values: jobTypesControl } } } filter={ { type: 'NumberFilter', delay: 1000, numberComparators: [ '=', '>', '<=' ] } }>control_id</TableHeaderColumn>\n        <TableHeaderColumn dataField='control_cotizacion_id' editable={ { validator: jobStatusValidator,type: 'select', options: { values: jobTypesCotizacion } } } filter={ { type: 'NumberFilter', delay: 1000, numberComparators: [ '=', '>', '<=' ] } }>control_cotizacion_id</TableHeaderColumn>\n        <TableHeaderColumn dataField='numeroDePedido' editable={ { type: 'input' } } filter={ { type: 'TextFilter', delay: 1000 } }>numeroDePedido</TableHeaderColumn>\n        <TableHeaderColumn dataField='proyecto' editable={ { type: 'input' } } filter={ { type: 'TextFilter', delay: 1000 } }>proyecto</TableHeaderColumn>\n        <TableHeaderColumn dataField='especialidad' editable={ { type: 'input' } } filter={ { type: 'TextFilter', delay: 1000 } }>especialidad</TableHeaderColumn>\n        <TableHeaderColumn dataField='fechaDeEmision' editable={ { type: 'date' } } filter={ { type: 'DateFilter' } }>fechaDeEmision</TableHeaderColumn>\n        <TableHeaderColumn dataField='moneda' editable={ { type: 'input' } } filter={ { type: 'TextFilter', delay: 1000 } }>moneda</TableHeaderColumn>\n        <TableHeaderColumn dataField='codigo_unificador' editable={ { type: 'input' } } filter={ { type: 'TextFilter', delay: 1000 } }>codigo_unificador</TableHeaderColumn>\n      </BootstrapTable>\n    );\n  }\n}","/* eslint max-len: 0 */\n/* eslint no-console: 0 */\nimport React from 'react';\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\nimport '../styles/react-bootstrap-table.css';\nimport moment from 'moment';\n\nlet jobs = [];\nlet jobTypes = [];\n\nconst cellEditProp = {\n  mode: 'click',\n  blurToSave: true,\n  afterSaveCell: onAfterSaveCell\n};\nconst selectRowProp = {\n  mode: 'checkbox'\n};\nfunction jobStatusValidator(value, row) {\n  const nan = isNaN(parseInt(value, 10));\n  if (nan) {\n    return 'Job Status must be a integer!';\n  }\n  return true;\n}\nasync function onAfterSaveCell(row, cellName, cellValue) {\n  if(cellName === \"fecha_emision_proyectada\"){\n    row.fecha_emision_proyectada = moment(cellValue).format('YYYY-MM-DD');\n  }else if(cellName === \"fecha_calificaion\"){\n    row.fecha_calificaion = moment(cellValue).format('YYYY-MM-DD');\n  }\n\n  const settings = {\n    method: 'PUT',\n    body: JSON.stringify(row),\n    headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n    }\n  };\n  let url = \"/control/\" + row.id;\n  try {\n      const fetchResponse = await fetch(url, settings);\n      const data = await fetchResponse.json();\n      console.log(data);\n  } catch (e) {\n    console.log(e);\n  }\n}\nasync function onAfterInsertRow(row) {\n  const settings = {\n    method: 'POST',\n    body: JSON.stringify(row),\n    headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n    }\n  };\n  try {\n      const fetchResponse = await fetch(`/control`, settings);\n      const data = await fetchResponse.json();\n      console.log(data);\n  } catch (e) {\n      console.log(e);\n  }\n}\n\nasync function onAfterDeleteRow(rowKeys,rows) {\n  for(let i = 0; i<rowKeys.length; i++){\n    let url = '/control/' + rows[i].id;\n    const settings = {\n    method: 'DELETE'\n    };\n    try {\n        const fetchResponse = await fetch(url, settings);\n        const data = await fetchResponse.json();\n        console.log(data);\n    } catch (e) {\n      console.log(e);\n    }\n  }\n}\n\nconst options = {\n  page: 1,  // which page you want to show as default\n  sizePerPageList: [ {\n    text: 5, value: 5\n  },\n  {\n    text: 10, value: 10\n  },\n  {\n    text: 15, value: 15\n  },\n  {\n    text: 20, value: 20\n  },\n  {\n    text: 30, value: 30\n  },\n  {\n    text: 40, value: 40\n  },\n  {\n    text: 50, value: 50\n  }/*,\n  {\n    text: 'All', value: jobs.length\n  }*/ ], // you can change the dropdown list for size per page\n  sizePerPage: 50,  // which size per page you want to locate as default\n  pageStartIndex: 1, // where to start counting the pages\n  paginationSize: 3,  // the pagination bar size.\n  prePage: 'Prev', // Previous page button text\n  nextPage: 'Next', // Next page button text\n  firstPage: 'First', // First page button text\n  lastPage: 'Last', // Last page button text\n  prePageTitle: 'Go to previous', // Previous page button title\n  nextPageTitle: 'Go to next', // Next page button title\n  firstPageTitle: 'Go to first', // First page button title\n  lastPageTitle: 'Go to Last', // Last page button title\n  paginationPosition: 'bottom',  // default is bottom, top and both is all available\n  // keepSizePerPageState: true //default is false, enable will keep sizePerPage dropdown state(open/clode) when external rerender happened\n  // hideSizePerPage: true > You can hide the dropdown for sizePerPage\n  // alwaysShowAllBtns: true // Always show next and previous button\n  // withFirstAndLast: false > Hide the going to First and Last page button\n  // hidePageListOnlyOnePage: true > Hide the page list if only one page.\n  afterDeleteRow: onAfterDeleteRow,\n  afterInsertRow: onAfterInsertRow\n  //handleConfirmDeleteRow: customConfirm REVISTAR CONFIRM\n};\n\nexport default class control extends React.Component {\n  constructor(props) {\n    super(props);\n    this.formatType = this.formatType.bind(this);\n  }\n\n  componentDidMount() {\n    this.callApi()\n      .then(res => this.setState({ response: res }))\n      .catch(err => console.log(err));\n    this.callApiDroop()\n      .then(res => this.setState({ response: res }))\n      .catch(err => console.log(err));\n  }\n\n  componentDidUpdate(prevProps) {\n    // Uso tipico (no olvides de comparar los props):\n    if (this.props.sendData !== prevProps.sendData) {\n      this.callApi();\n    }\n  }\n\n  formatType(cell) {\n    return `TYPE_${cell}`;\n  }\n\n  callApi = async () => {\n    console.log(\"control \" + this.props.sendData);\n    if(this.props.sendData){\n      jobs = [];\n      const response = await fetch('/control/codigoUnificador/'+this.props.sendData);\n      var data = await response.json();\n      if (response.status !== 200) throw Error(data.message);\n      for (let i = 0; i < data.length; i++) {\n        let fecha1 = moment(data[i].fecha_emision_proyectada).format('YYYY-MM-DD');\n        let fecha3 = moment(data[i].fecha_calificaion).format('YYYY-MM-DD');\n        jobs.push({\n          id: data[i].id,\n          cotizacion_id: data[i].cotizacion_id,\n          fecha_emision_proyectada: fecha1,\n          revision: data[i].revision,\n          fecha_calificaion: fecha3,\n          numero_documento: data[i].numero_documento,\n          numero_control: data[i].numero_control,\n          numero_doc: data[i].numero_doc,\n          codigo_unificador: data[i].codigo_unificador,\n          codigo_doc_cliente: data[i].codigo_doc_cliente\n        });\n      }\n    }else{\n      jobs = [];\n      const response = await fetch('/control');\n      var data = await response.json();\n      if (response.status !== 200) throw Error(data.message);\n      for (let i = 0; i < data.length; i++) {\n        let fecha1 = moment(data[i].fecha_emision_proyectada).format('YYYY-MM-DD');\n        let fecha3 = moment(data[i].fecha_calificaion).format('YYYY-MM-DD');\n        jobs.push({\n          id: data[i].id,\n          cotizacion_id: data[i].cotizacion_id,\n          fecha_emision_proyectada: fecha1,\n          revision: data[i].revision,\n          fecha_calificaion: fecha3,\n          numero_documento: data[i].numero_documento,\n          numero_control: data[i].numero_control,\n          numero_doc: data[i].numero_doc,\n          codigo_unificador: data[i].codigo_unificador,\n          codigo_doc_cliente: data[i].codigo_doc_cliente\n        });\n      }\n    }\n  }\n\n  callApiDroop = async () => {\n    const response = await fetch('/cotizacion');\n    var data = await response.json();\n    if (response.status !== 200) throw Error(data.message);\n    for (let i = 0; i < data.length; i++) {\n      jobTypes.push({\n        value: data[i].id,\n        text: data[i].titulo_cotiazacion\n      });\n    }\n  }\n\n  render() {\n    // custom attributes on editor\n    return (\n      <BootstrapTable data={ jobs } cellEdit={ cellEditProp } insertRow={ true } pagination={ true } options={ options } exportCSV={ true } deleteRow={ true } selectRow={ selectRowProp } >\n        <TableHeaderColumn dataField='id' isKey={ true } autoValue={ true } filter={ { type: 'NumberFilter', delay: 1000, numberComparators: [ '=', '>', '<=' ] } }>ID</TableHeaderColumn>\n        <TableHeaderColumn dataField='cotizacion_id' editable={ { validator: jobStatusValidator,type: 'select', options: { values: jobTypes } } } filter={ { type: 'NumberFilter', delay: 1000, numberComparators: [ '=', '>', '<=' ] } }>cotizacion_id</TableHeaderColumn>\n        <TableHeaderColumn dataField='fecha_emision_proyectada' editable={ { type: 'date' } } filter={ { type: 'DateFilter' } }>fecha_emision_proyectada</TableHeaderColumn>\n        <TableHeaderColumn dataField='revision' editable={ { type: 'input' } } filter={ { type: 'TextFilter', delay: 1000 } }>revision</TableHeaderColumn>\n        <TableHeaderColumn dataField='fecha_calificaion' editable={ { type: 'date' } } filter={ { type: 'DateFilter' } }>fecha_calificaion</TableHeaderColumn>\n        <TableHeaderColumn dataField='numero_documento' editable={ { type: 'input' } } filter={ { type: 'TextFilter', delay: 1000 } }>numero_documento</TableHeaderColumn>\n        <TableHeaderColumn dataField='numero_control' editable={ { type: 'input' } } filter={ { type: 'TextFilter', delay: 1000 } }>numero_control</TableHeaderColumn>\n        <TableHeaderColumn dataField='numero_doc' editable={ { type: 'input' } } filter={ { type: 'TextFilter', delay: 1000 } }>numero_doc</TableHeaderColumn>\n        <TableHeaderColumn dataField='codigo_doc_cliente' editable={ { type: 'input' } } filter={ { type: 'TextFilter', delay: 1000 } }>codigo_doc_cliente</TableHeaderColumn>\n        <TableHeaderColumn dataField='codigo_unificador' editable={ { type: 'input' } } filter={ { type: 'TextFilter', delay: 1000 } }>codigo_unificador</TableHeaderColumn>\n      </BootstrapTable>\n    );\n  }\n}","import React from 'react';\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\nimport '../styles/react-bootstrap-table.css';\nimport moment from 'moment';\n\nlet jobs = [];\nlet jobTypes = [];\n\nconst cellEditProp = {\n  mode: 'click',\n  blurToSave: true,\n  afterSaveCell: onAfterSaveCell\n}\n\nconst selectRowProp = {\n  mode: 'checkbox'\n}\n\nasync function onAfterSaveCell(row, cellName, cellValue) {\n  if(cellName === \"fecha\"){\n    row.fecha = moment(cellValue).format('YYYY-MM-DD');\n  }\n  const settings = {\n    method: 'PUT',\n    body: JSON.stringify(row),\n    headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n    }\n  };\n  let url = \"/cotizacion/\" + row.id;\n  try {\n      const fetchResponse = await fetch(url, settings);\n      const data = await fetchResponse.json();\n      console.log(data);\n  } catch (e) {\n    console.log(e);\n  }\n}\nasync function onAfterInsertRow(row) {\n  const settings = {\n    method: 'POST',\n    body: JSON.stringify(row),\n    headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n    }\n  };\n  try {\n      const fetchResponse = await fetch(`/cotizacion`, settings);\n      const data = await fetchResponse.json();\n      console.log(data);\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nasync function onAfterDeleteRow(rowKeys,rows) {\n  for(let i = 0; i<rowKeys.length; i++){\n    let url = '/cotizacion/' + rows[i].id;\n    const settings = {\n    method: 'DELETE'\n    };\n    try {\n        const fetchResponse = await fetch(url, settings);\n        const data = await fetchResponse.json();\n        console.log(data);\n    } catch (e) {\n      console.log(e);\n    }\n  }\n}\n\nconst options = {\n  page: 1,  // which page you want to show as default\n  sizePerPageList: [ {\n    text: 5, value: 5\n  },\n  {\n    text: 10, value: 10\n  },\n  {\n    text: 15, value: 15\n  },\n  {\n    text: 20, value: 20\n  },\n  {\n    text: 30, value: 30\n  },\n  {\n    text: 40, value: 40\n  },\n  {\n    text: 50, value: 50\n  }/*,\n  {\n    text: 'All', value: jobs.length\n  }*/ ], // you can change the dropdown list for size per page\n  sizePerPage: 50,  // which size per page you want to locate as default\n  pageStartIndex: 1, // where to start counting the pages\n  paginationSize: 3,  // the pagination bar size.\n  prePage: 'Prev', // Previous page button text\n  nextPage: 'Next', // Next page button text\n  firstPage: 'First', // First page button text\n  lastPage: 'Last', // Last page button text\n  prePageTitle: 'Go to previous', // Previous page button title\n  nextPageTitle: 'Go to next', // Next page button title\n  firstPageTitle: 'Go to first', // First page button title\n  lastPageTitle: 'Go to Last', // Last page button title\n  paginationPosition: 'bottom',  // default is bottom, top and both is all available\n  // keepSizePerPageState: true //default is false, enable will keep sizePerPage dropdown state(open/clode) when external rerender happened\n  // hideSizePerPage: true > You can hide the dropdown for sizePerPage\n  // alwaysShowAllBtns: true // Always show next and previous button\n  // withFirstAndLast: false > Hide the going to First and Last page button\n  // hidePageListOnlyOnePage: true > Hide the page list if only one page.\n  afterDeleteRow: onAfterDeleteRow,\n  afterInsertRow: onAfterInsertRow\n  //handleConfirmDeleteRow: customConfirm REVISTAR CONFIRM\n};\n\nexport default class Cotizacion extends React.Component {\n  constructor(props) {\n    super(props);\n    this.formatType = this.formatType.bind(this);\n  }\n\n  componentDidMount(){\n    this.callApi()\n      .then(res => this.setState({ response: res }))\n      .catch(err => console.log(err));\n    this.callApiDroop()\n      .then(res => this.setState({ response: res }))\n      .catch(err => console.log(err));\n  }\n\n  componentDidUpdate(prevProps) {\n    // Uso tipico (no olvides de comparar los props):\n    if (this.props.sendData !== prevProps.sendData) {\n      this.callApi();\n    }\n  }\n\n  formatType(cell) {\n    return `TYPE_${cell}`;\n  }\n\n  callApi = async () => {\n    console.log(\"cotizacion \" + this.props.sendData);\n    if(this.props.sendData){\n      jobs = [];\n      const response = await fetch('/cotizacion/codigoUnificador/'+this.props.sendData);\n      var data = await response.json();\n      if (response.status !== 200) throw Error(data.message);\n      for (let i = 0; i < data.length; i++) {\n        let fecha1 = moment(data[i].fecha).format('YYYY-MM-DD');\n        jobs.push({\n          id: data[i].id,\n          revision: data[i].revision,\n          fecha: fecha1,\n          titulo_cotiazacion: data[i].titulo_cotiazacion,\n          numero_doc: data[i].numero_doc,\n          codigo_unificador: data[i].codigo_unificador,\n          cliente_id: data[i].cliente_id\n        });\n      }\n    }else{\n      jobs = [];\n      const response = await fetch('/cotizacion');\n      var data = await response.json();\n      if (response.status !== 200) throw Error(data.message);\n      for (let i = 0; i < data.length; i++) {\n        let fecha1 = moment(data[i].fecha).format('YYYY-MM-DD');\n        jobs.push({\n          id: data[i].id,\n          revision: data[i].revision,\n          fecha: fecha1,\n          titulo_cotiazacion: data[i].titulo_cotiazacion,\n          numero_doc: data[i].numero_doc,\n          codigo_unificador: data[i].codigo_unificador,\n          cliente_id: data[i].cliente_id\n        });\n      }\n    }\n  }\n\n  callApiDroop = async () => {\n    const response = await fetch('/cliente');\n    var data = await response.json();\n    if (response.status !== 200) throw Error(data.message);\n    for (let i = 0; i < data.length; i++) {\n      jobTypes.push({\n        value: data[i].id,\n        text: data[i].nombre\n      });\n    }\n  }\n\n  render() {\n    return (\n      <BootstrapTable data={ jobs } cellEdit={ cellEditProp } insertRow={ true } pagination={ true } options={ options } exportCSV={ true } deleteRow={ true } selectRow={ selectRowProp }>\n      <TableHeaderColumn dataField='id' isKey={ true } autoValue={ true } filter={ { type: 'NumberFilter', delay: 1000, numberComparators: [ '=', '>', '<=' ] } }>ID</TableHeaderColumn>\n      <TableHeaderColumn dataField='revision' editable={ { type: 'input' } } filter={ { type: 'TextFilter', delay: 1000 } }>revision</TableHeaderColumn>\n      <TableHeaderColumn dataField='fecha' editable={ { type: 'date' } } filter={ { type: 'DateFilter' } }>fecha</TableHeaderColumn>\n      <TableHeaderColumn dataField='titulo_cotiazacion' editable={ { type: 'input' } } filter={ { type: 'TextFilter', delay: 1000 } }>titulo_cotiazacion</TableHeaderColumn>\n      <TableHeaderColumn dataField='numero_doc' editable={ { type: 'input' } } filter={ { type: 'TextFilter', delay: 1000 } }>numero_doc</TableHeaderColumn>\n      <TableHeaderColumn dataField='codigo_unificador' editable={ { type: 'input' } } filter={ { type: 'TextFilter', delay: 1000 } }>codigo_unificador</TableHeaderColumn>\n      <TableHeaderColumn dataField='cliente_id' editable={ { type: 'select', options: { values: jobTypes } } } filter={ { type: 'NumberFilter', delay: 1000, numberComparators: [ '=', '>', '<=' ] } }>cliente_id</TableHeaderColumn>\n      </BootstrapTable>\n    );\n  }\n}","/* eslint max-len: 0 */\n/* eslint no-console: 0 */\nimport React from 'react';\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\nimport '../styles/react-bootstrap-table.css';\n\nlet jobs = [];\nlet jobTypesCotizacion = [];\nlet jobTypesDocumentos = [];\nlet jobTypesControl = [];\n\nconst cellEditProp = {\n  mode: 'click',\n  blurToSave: true,\n  afterSaveCell: onAfterSaveCell\n};\nconst selectRowProp = {\n  mode: 'checkbox'\n};\nfunction jobStatusValidator(value, row) {\n  const nan = isNaN(parseInt(value, 10));\n  if (nan) {\n    return 'Job Status must be a integer!';\n  }\n  return true;\n}\nasync function onAfterSaveCell(row, cellName, cellValue) {\n  const settings = {\n    method: 'PUT',\n    body: JSON.stringify(row),\n    headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n    }\n  };\n  let url = \"/datosControl/\" + row.id;\n  try {\n      const fetchResponse = await fetch(url, settings);\n      const data = await fetchResponse.json();\n      console.log(data);\n  } catch (e) {\n    console.log(e);\n  }\n}\nasync function onAfterInsertRow(row) {\n  const settings = {\n    method: 'POST',\n    body: JSON.stringify(row),\n    headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n    }\n  };\n  try {\n      const fetchResponse = await fetch(`/datosControl`, settings);\n      const data = await fetchResponse.json();\n      console.log(data);\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nasync function onAfterDeleteRow(rowKeys,rows) {\n  for(let i = 0; i<rowKeys.length; i++){\n    let url = '/datosControl/' + rows[i].id;\n    const settings = {\n    method: 'DELETE'\n    };\n    try {\n        const fetchResponse = await fetch(url, settings);\n        const data = await fetchResponse.json();\n        console.log(data);\n    } catch (e) {\n      console.log(e);\n    }\n  }\n}\nconst options = {\n  page: 1,  // which page you want to show as default\n  sizePerPageList: [ {\n    text: 5, value: 5\n  },\n  {\n    text: 10, value: 10\n  },\n  {\n    text: 15, value: 15\n  },\n  {\n    text: 20, value: 20\n  },\n  {\n    text: 30, value: 30\n  },\n  {\n    text: 40, value: 40\n  },\n  {\n    text: 50, value: 50\n  }/*,\n  {\n    text: 'All', value: jobs.length\n  }*/ ], // you can change the dropdown list for size per page\n  sizePerPage: 50,  // which size per page you want to locate as default\n  pageStartIndex: 1, // where to start counting the pages\n  paginationSize: 3,  // the pagination bar size.\n  prePage: 'Prev', // Previous page button text\n  nextPage: 'Next', // Next page button text\n  firstPage: 'First', // First page button text\n  lastPage: 'Last', // Last page button text\n  prePageTitle: 'Go to previous', // Previous page button title\n  nextPageTitle: 'Go to next', // Next page button title\n  firstPageTitle: 'Go to first', // First page button title\n  lastPageTitle: 'Go to Last', // Last page button title\n  paginationPosition: 'bottom',  // default is bottom, top and both is all available\n  // keepSizePerPageState: true //default is false, enable will keep sizePerPage dropdown state(open/clode) when external rerender happened\n  // hideSizePerPage: true > You can hide the dropdown for sizePerPage\n  // alwaysShowAllBtns: true // Always show next and previous button\n  // withFirstAndLast: false > Hide the going to First and Last page button\n  // hidePageListOnlyOnePage: true > Hide the page list if only one page.\n  afterDeleteRow: onAfterDeleteRow,\n  afterInsertRow: onAfterInsertRow\n  //handleConfirmDeleteRow: customConfirm REVISTAR CONFIRM\n};\n\nexport default class datosControl extends React.Component {\n  constructor(props) {\n    super(props);\n    this.formatType = this.formatType.bind(this);\n  }\n\n  componentDidMount() {\n    this.callApi()\n      .then(res => this.setState({ response: res }))\n      .catch(err => console.log(err));\n    this.callApiDroopCotizacion()\n      .then(res => this.setState({ response: res }))\n      .catch(err => console.log(err));\n    this.callApiDroopDocumentos()\n      .then(res => this.setState({ response: res }))\n      .catch(err => console.log(err));\n    this.callApiDroopControl()\n      .then(res => this.setState({ response: res }))\n      .catch(err => console.log(err));\n  }\n\n  componentDidUpdate(prevProps) {\n    // Uso tipico (no olvides de comparar los props):\n    if (this.props.sendData !== prevProps.sendData) {\n      this.callApi();\n    }\n  }\n\n  formatType(cell) {\n    return `TYPE_${cell}`;\n  }\n\n  callApi = async () => {\n    if(this.props.sendData){\n      jobs = [];\n      const response = await fetch('/datosControl/codigoUnificador/'+this.props.sendData);\n      var data = await response.json();\n      if (response.status !== 200) throw Error(data.message);\n      for (let i = 0; i < data.length; i++) {\n        jobs.push({\n          id: data[i].id,\n          descripcion_doc: data[i].descripcion_doc,\n          revicion: data[i].revicion,\n          cantidad_doc: data[i].cantidad_doc,\n          HHUnidades: data[i].HHUnidades,\n          total: data[i].total,\n          revision: data[i].revision,\n          observacion: data[i].observacion,\n          HH_asociado: data[i].HH_asociado,\n          proveedor: data[i].proveedor,\n          viatico: data[i].viatico,\n          control_id: data[i].control_id,\n          control_cotizacion_id: data[i].control_cotizacion_id,\n          list_docs_id: data[i].list_docs_id\n        });\n      }\n    }else{\n      jobs = [];\n      const response = await fetch('/datosControl');\n      var data = await response.json();\n      if (response.status !== 200) throw Error(data.message);\n      for (let i = 0; i < data.length; i++) {\n        jobs.push({\n          id: data[i].id,\n          descripcion_doc: data[i].descripcion_doc,\n          revicion: data[i].revicion,\n          cantidad_doc: data[i].cantidad_doc,\n          HHUnidades: data[i].HHUnidades,\n          total: data[i].total,\n          revision: data[i].revision,\n          observacion: data[i].observacion,\n          HH_asociado: data[i].HH_asociado,\n          proveedor: data[i].proveedor,\n          viatico: data[i].viatico,\n          control_id: data[i].control_id,\n          control_cotizacion_id: data[i].control_cotizacion_id,\n          list_docs_id: data[i].list_docs_id\n        });\n      }\n    }\n  }\n\n  callApiDroopCotizacion = async () => {\n    const response = await fetch('/cotizacion');\n    var data = await response.json();\n    if (response.status !== 200) throw Error(data.message);\n    for (let i = 0; i < data.length; i++) {\n      jobTypesCotizacion.push({\n        value: data[i].id,\n        text: data[i].titulo_cotiazacion\n      });\n    }\n  }\n\n  callApiDroopDocumentos = async () => {\n    const response = await fetch('/list_docs');\n    var data = await response.json();\n    if (response.status !== 200) throw Error(data.message);\n    for (let i = 0; i < data.length; i++) {\n      let mergeNombre = data[i].nombre + \" \" + data[i].titulo_documento;\n      jobTypesDocumentos.push({\n        value: data[i].id,\n        text: mergeNombre\n      });\n    }\n  }\n\n  callApiDroopControl = async () => {\n    const response = await fetch('/control');\n    var data = await response.json();\n    if (response.status !== 200) throw Error(data.message);\n    for (let i = 0; i < data.length; i++) {\n      jobTypesControl.push({\n        value: data[i].id,\n        text: data[i].numero_control\n      });\n    }\n  }\n\n  render() {\n    return (\n      <BootstrapTable data={ jobs } cellEdit={ cellEditProp } insertRow={ true } pagination={ true } options={ options } exportCSV={ true } deleteRow={ true } selectRow={ selectRowProp }>\n        <TableHeaderColumn dataField='id' isKey={ true } autoValue={ true } filter={ { type: 'NumberFilter', delay: 1000, numberComparators: [ '=', '>', '<=' ] } }>ID</TableHeaderColumn>\n        <TableHeaderColumn dataField='descripcion_doc' editable={ { type: 'input' } } filter={ { type: 'TextFilter', delay: 1000 } }>descripcion_doc</TableHeaderColumn>\n        <TableHeaderColumn dataField='revicion' editable={ { type: 'input' } } filter={ { type: 'TextFilter', delay: 1000 } }>revicion</TableHeaderColumn>\n        <TableHeaderColumn dataField='cantidad_doc' editable={ { validator: jobStatusValidator,type: 'input' } } filter={ { type: 'NumberFilter', delay: 1000, numberComparators: [ '=', '>', '<=' ] } }>cantidad_doc</TableHeaderColumn>\n        <TableHeaderColumn dataField='HHUnidades' editable={ { validator: jobStatusValidator,type: 'input' } } filter={ { type: 'NumberFilter', delay: 1000, numberComparators: [ '=', '>', '<=' ] } }>HHUnidades</TableHeaderColumn>\n        <TableHeaderColumn dataField='total' editable={ { validator: jobStatusValidator,type: 'input' } } filter={ { type: 'NumberFilter', delay: 1000, numberComparators: [ '=', '>', '<=' ] } }>total</TableHeaderColumn>\n        <TableHeaderColumn dataField='observacion' editable={ { type: 'input' } } filter={ { type: 'TextFilter', delay: 1000 } }>observacion</TableHeaderColumn>\n        <TableHeaderColumn dataField='HH_asociado' editable={ { validator: jobStatusValidator,type: 'input' } } filter={ { type: 'NumberFilter', delay: 1000, numberComparators: [ '=', '>', '<=' ] } }>HH_asociado</TableHeaderColumn>\n        <TableHeaderColumn dataField='proveedor' editable={ { validator: jobStatusValidator,type: 'input' } } filter={ { type: 'NumberFilter', delay: 1000, numberComparators: [ '=', '>', '<=' ] } }>proveedor</TableHeaderColumn>\n        <TableHeaderColumn dataField='viatico' editable={ { validator: jobStatusValidator,type: 'input' } } filter={ { type: 'NumberFilter', delay: 1000, numberComparators: [ '=', '>', '<=' ] } }>viatico</TableHeaderColumn>\n        <TableHeaderColumn dataField='control_id' editable={ { validator: jobStatusValidator,type: 'select', options: { values: jobTypesControl } } } filter={ { type: 'NumberFilter', delay: 1000, numberComparators: [ '=', '>', '<=' ] } }>control_id</TableHeaderColumn>\n        <TableHeaderColumn dataField='control_cotizacion_id' editable={ { validator: jobStatusValidator,type: 'select', options: { values: jobTypesCotizacion } } } filter={ { type: 'NumberFilter', delay: 1000, numberComparators: [ '=', '>', '<=' ] } }>control_cotizacion_id</TableHeaderColumn>\n        <TableHeaderColumn dataField='list_docs_id' editable={ { validator: jobStatusValidator,type: 'select', options: { values: jobTypesDocumentos } } } filter={ { type: 'NumberFilter', delay: 1000, numberComparators: [ '=', '>', '<=' ] } }>list_docs_id</TableHeaderColumn>\n      </BootstrapTable>\n    );\n  }\n}","/* eslint max-len: 0 */\n/* eslint no-console: 0 */\nimport React from 'react';\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\nimport '../styles/react-bootstrap-table.css';\n\nlet jobs = [];\nlet jobTypesCotizacion = [];\nlet jobTypesDocumentos = [];\nconst cellEditProp = {\n  mode: 'click',\n  blurToSave: true,\n  afterSaveCell: onAfterSaveCell\n};\nconst selectRowProp = {\n  mode: 'checkbox'\n};\nfunction jobStatusValidator(value, row) {\n  const nan = isNaN(parseInt(value, 10));\n  if (nan) {\n    return 'Job Status must be a integer!';\n  }\n  return true;\n}\nasync function onAfterSaveCell(row, cellName, cellValue) {\n  const settings = {\n    method: 'PUT',\n    body: JSON.stringify(row),\n    headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n    }\n  };\n  let url = \"/datosCotizacion/\" + row.id;\n  try {\n      const fetchResponse = await fetch(url, settings);\n      const data = await fetchResponse.json();\n      console.log(data);\n  } catch (e) {\n    console.log(e);\n  }\n}\nasync function onAfterInsertRow(row) {\n  const settings = {\n    method: 'POST',\n    body: JSON.stringify(row),\n    headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n    }\n  };\n  try {\n      const fetchResponse = await fetch(`/datosCotizacion`, settings);\n      const data = await fetchResponse.json();\n      console.log(data);\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nasync function onAfterDeleteRow(rowKeys,rows) {\n  for(let i = 0; i<rowKeys.length; i++){\n    let url = '/datosCotizacion/' + rows[i].id;\n    const settings = {\n    method: 'DELETE'\n    };\n    try {\n        const fetchResponse = await fetch(url, settings);\n        const data = await fetchResponse.json();\n        console.log(data);\n    } catch (e) {\n      console.log(e);\n    }\n  }\n}\nconst options = {\n  page: 1,  // which page you want to show as default\n  sizePerPageList: [ {\n    text: 5, value: 5\n  },\n  {\n    text: 10, value: 10\n  },\n  {\n    text: 15, value: 15\n  },\n  {\n    text: 20, value: 20\n  },\n  {\n    text: 30, value: 30\n  },\n  {\n    text: 40, value: 40\n  },\n  {\n    text: 50, value: 50\n  }/*,\n  {\n    text: 'All', value: jobs.length\n  }*/ ], // you can change the dropdown list for size per page\n  sizePerPage: 50,  // which size per page you want to locate as default\n  pageStartIndex: 1, // where to start counting the pages\n  paginationSize: 3,  // the pagination bar size.\n  prePage: 'Prev', // Previous page button text\n  nextPage: 'Next', // Next page button text\n  firstPage: 'First', // First page button text\n  lastPage: 'Last', // Last page button text\n  prePageTitle: 'Go to previous', // Previous page button title\n  nextPageTitle: 'Go to next', // Next page button title\n  firstPageTitle: 'Go to first', // First page button title\n  lastPageTitle: 'Go to Last', // Last page button title\n  paginationPosition: 'bottom',  // default is bottom, top and both is all available\n  // keepSizePerPageState: true //default is false, enable will keep sizePerPage dropdown state(open/clode) when external rerender happened\n  // hideSizePerPage: true > You can hide the dropdown for sizePerPage\n  // alwaysShowAllBtns: true // Always show next and previous button\n  // withFirstAndLast: false > Hide the going to First and Last page button\n  // hidePageListOnlyOnePage: true > Hide the page list if only one page.\n  afterDeleteRow: onAfterDeleteRow,\n  afterInsertRow: onAfterInsertRow\n  //handleConfirmDeleteRow: customConfirm REVISTAR CONFIRM\n};\n\nexport default class datosCotizacion extends React.Component {\n  constructor(props) {\n    super(props);\n    this.formatType = this.formatType.bind(this);\n  }\n\n  componentDidMount() {\n    this.callApi()\n      .then(res => this.setState({ response: res }))\n      .catch(err => console.log(err));\n    this.callApiDroopCotizacion()\n      .then(res => this.setState({ response: res }))\n      .catch(err => console.log(err));\n    this.callApiDroopDocumentos()\n      .then(res => this.setState({ response: res }))\n      .catch(err => console.log(err));\n  }\n\n  componentDidUpdate(prevProps) {\n    // Uso tipico (no olvides de comparar los props):\n    if (this.props.sendData !== prevProps.sendData) {\n      this.callApi();\n    }\n  }\n\n  formatType(cell) {\n    return `TYPE_${cell}`;\n  }\n\n  callApi = async () => {\n    if(this.props.sendData){\n      jobs = [];\n      const response = await fetch('/datosCotizacion/codigoUnificador/'+this.props.sendData);\n      var data = await response.json();\n      if (response.status !== 200) throw Error(data.message);\n      for (let i = 0; i < data.length; i++) {\n        jobs.push({\n          id: data[i].id,\n          numeroRecotizacion: data[i].numeroRecotizacion,\n          cotizacion_id: data[i].cotizacion_id,\n          descripcion_doc: data[i].descripcion_doc,\n          revicion: data[i].revicion,\n          cantidad_doc: data[i].cantidad_doc,\n          HHUnidades: data[i].HHUnidades,\n          total: data[i].total,\n          observacion: data[i].observacion,\n          HH_asociado: data[i].HH_asociado,\n          proveerdor: data[i].proveerdor,\n          viatico: data[i].viatico,\n          list_docs_id: data[i].list_docs_id\n        });\n      }\n    }else{\n      jobs = [];\n      const response = await fetch('/datosCotizacion');\n      var data = await response.json();\n      if (response.status !== 200) throw Error(data.message);\n      for (let i = 0; i < data.length; i++) {\n        jobs.push({\n          id: data[i].id,\n          numeroRecotizacion: data[i].numeroRecotizacion,\n          cotizacion_id: data[i].cotizacion_id,\n          descripcion_doc: data[i].descripcion_doc,\n          revicion: data[i].revicion,\n          cantidad_doc: data[i].cantidad_doc,\n          HHUnidades: data[i].HHUnidades,\n          total: data[i].total,\n          observacion: data[i].observacion,\n          HH_asociado: data[i].HH_asociado,\n          proveerdor: data[i].proveerdor,\n          viatico: data[i].viatico,\n          list_docs_id: data[i].list_docs_id\n        });\n      }\n    }\n  }\n  callApiDroopCotizacion = async () => {\n    const response = await fetch('/cotizacion');\n    var data = await response.json();\n    if (response.status !== 200) throw Error(data.message);\n    for (let i = 0; i < data.length; i++) {\n      jobTypesCotizacion.push({\n        value: data[i].id,\n        text: data[i].titulo_cotiazacion\n      });\n    }\n  }\n\n  callApiDroopDocumentos = async () => {\n    const response = await fetch('/list_docs');\n    var data = await response.json();\n    if (response.status !== 200) throw Error(data.message);\n    for (let i = 0; i < data.length; i++) {\n      let mergeNombre = data[i].nombre + \" \" + data[i].titulo_documento;\n      jobTypesDocumentos.push({\n        value: data[i].id,\n        text: mergeNombre\n      });\n    }\n  }\n\n  render() {\n    return (\n      <BootstrapTable data={ jobs } cellEdit={ cellEditProp } insertRow={ true } pagination={ true } options={ options } exportCSV={ true } deleteRow={ true } selectRow={ selectRowProp }>\n        <TableHeaderColumn dataField='id' isKey={ true } autoValue={ true } filter={ { type: 'NumberFilter', delay: 1000, numberComparators: [ '=', '>', '<=' ] } }>ID</TableHeaderColumn>\n        <TableHeaderColumn dataField='numeroRecotizacion'  editable={ { validator: jobStatusValidator,type: 'input' } } filter={ { type: 'NumberFilter', delay: 1000, numberComparators: [ '=', '>', '<=' ] } }>numeroRecotizacion</TableHeaderColumn>\n        <TableHeaderColumn dataField='cotizacion_id'  editable={ { validator: jobStatusValidator,type: 'select', options: { values: jobTypesCotizacion } } } filter={ { type: 'NumberFilter', delay: 1000, numberComparators: [ '=', '>', '<=' ] } }>cotizacion_id</TableHeaderColumn>\n        <TableHeaderColumn dataField='descripcion_doc'  editable={ { type: 'input' } } filter={ { type: 'TextFilter', delay: 1000 } }>descripcion_doc</TableHeaderColumn>\n        <TableHeaderColumn dataField='revicion'  editable={ { validator: jobStatusValidator,type: 'input' } }>revicion</TableHeaderColumn>\n        <TableHeaderColumn dataField='cantidad_doc'  editable={ {validator: jobStatusValidator, type: 'input' } } filter={ { type: 'TextFilter', delay: 1000 } }>cantidad_doc</TableHeaderColumn>\n        <TableHeaderColumn dataField='HHUnidades'  editable={ { validator: jobStatusValidator,type: 'input' } } filter={ { type: 'NumberFilter', delay: 1000, numberComparators: [ '=', '>', '<=' ] } }>HHUnidades</TableHeaderColumn>\n        <TableHeaderColumn dataField='total'  editable={ { validator: jobStatusValidator,type: 'input' } } filter={ { type: 'NumberFilter', delay: 1000, numberComparators: [ '=', '>', '<=' ] } }>total</TableHeaderColumn>\n        <TableHeaderColumn dataField='observacion'  editable={ { type: 'input' } } filter={ { type: 'TextFilter', delay: 1000 } }>observacion</TableHeaderColumn>\n        <TableHeaderColumn dataField='HH_asociado'  editable={ { validator: jobStatusValidator,type: 'input' } } filter={ { type: 'NumberFilter', delay: 1000, numberComparators: [ '=', '>', '<=' ] } }>HH_asociado</TableHeaderColumn>\n        <TableHeaderColumn dataField='proveerdor'  editable={ { validator: jobStatusValidator,type: 'input' } } filter={ { type: 'NumberFilter', delay: 1000, numberComparators: [ '=', '>', '<=' ] } }>proveerdor</TableHeaderColumn>\n        <TableHeaderColumn dataField='viatico'  editable={ { validator: jobStatusValidator,type: 'input' } } filter={ { type: 'NumberFilter', delay: 1000, numberComparators: [ '=', '>', '<=' ] } }>viatico</TableHeaderColumn>\n        <TableHeaderColumn dataField='list_docs_id'  editable={ { validator: jobStatusValidator,type: 'select', options: { values: jobTypesDocumentos } } } filter={ { type: 'NumberFilter', delay: 1000, numberComparators: [ '=', '>', '<=' ] } }>list_docs_id</TableHeaderColumn>\n      </BootstrapTable>\n    );\n  }\n}","/* eslint max-len: 0 */\n/* eslint no-console: 0 */\nimport React from 'react';\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\nimport '../styles/react-bootstrap-table.css';\n\nlet jobs = [];\nconst cellEditProp = {\n  mode: 'click',\n  blurToSave: true,\n  afterSaveCell: onAfterSaveCell\n};\nfunction jobStatusValidator(value, row) {\n  const nan = isNaN(parseInt(value, 10));\n  if (nan) {\n    return 'Job Status must be a integer!';\n  }\n  return true;\n}\nconst selectRowProp = {\n  mode: 'checkbox'\n};\nasync function onAfterSaveCell(row, cellName, cellValue) {\n  const settings = {\n    method: 'PUT',\n    body: JSON.stringify(row),\n    headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n    }\n  };\n  let url = \"/list_docs/\" + row.id;\n  try {\n      const fetchResponse = await fetch(url, settings);\n      const data = await fetchResponse.json();\n      console.log(data);\n  } catch (e) {\n    console.log(e);\n  }\n}\nasync function onAfterInsertRow(row) {\n  const settings = {\n    method: 'POST',\n    body: JSON.stringify(row),\n    headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n    }\n  };\n  try {\n      const fetchResponse = await fetch(`/list_docs`, settings);\n      const data = await fetchResponse.json();\n      console.log(data);\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nasync function onAfterDeleteRow(rowKeys,rows) {\n  for(let i = 0; i<rowKeys.length; i++){\n    let url = '/list_docs/' + rows[i].id;\n    const settings = {\n    method: 'DELETE'\n    };\n    try {\n        const fetchResponse = await fetch(url, settings);\n        const data = await fetchResponse.json();\n        console.log(data);\n    } catch (e) {\n      console.log(e);\n    }\n  }\n}\nconst options = {\n  page: 1,  // which page you want to show as default\n  sizePerPageList: [ {\n    text: 5, value: 5\n  },\n  {\n    text: 10, value: 10\n  },\n  {\n    text: 15, value: 15\n  },\n  {\n    text: 20, value: 20\n  },\n  {\n    text: 30, value: 30\n  },\n  {\n    text: 40, value: 40\n  },\n  {\n    text: 50, value: 50\n  }/*,\n  {\n    text: 'All', value: jobs.length\n  }*/ ], // you can change the dropdown list for size per page\n  sizePerPage: 50,  // which size per page you want to locate as default\n  pageStartIndex: 1, // where to start counting the pages\n  paginationSize: 3,  // the pagination bar size.\n  prePage: 'Prev', // Previous page button text\n  nextPage: 'Next', // Next page button text\n  firstPage: 'First', // First page button text\n  lastPage: 'Last', // Last page button text\n  prePageTitle: 'Go to previous', // Previous page button title\n  nextPageTitle: 'Go to next', // Next page button title\n  firstPageTitle: 'Go to first', // First page button title\n  lastPageTitle: 'Go to Last', // Last page button title\n  paginationPosition: 'bottom',  // default is bottom, top and both is all available\n  // keepSizePerPageState: true //default is false, enable will keep sizePerPage dropdown state(open/clode) when external rerender happened\n  // hideSizePerPage: true > You can hide the dropdown for sizePerPage\n  // alwaysShowAllBtns: true // Always show next and previous button\n  // withFirstAndLast: false > Hide the going to First and Last page button\n  // hidePageListOnlyOnePage: true > Hide the page list if only one page.\n  afterDeleteRow: onAfterDeleteRow,\n  afterInsertRow: onAfterInsertRow\n  //handleConfirmDeleteRow: customConfirm REVISTAR CONFIRM\n};\n\nexport default class list_docs extends React.Component {\n  constructor(props) {\n    super(props);\n    this.formatType = this.formatType.bind(this);\n  }\n\n  componentDidMount() {\n    this.callApi()\n      .then(res => this.setState({ response: res }))\n      .catch(err => console.log(err));\n  }\n\n  formatType(cell) {\n    return `TYPE_${cell}`;\n  }\n\n  callApi = async () => {\n    jobs = [];\n    const response = await fetch('/list_docs');\n    var data = await response.json();\n    if (response.status !== 200) throw Error(data.message);\n    for (let i = 0; i < data.length; i++) {\n      jobs.push({\n        id: data[i].id,\n        nombre: data[i].nombre,\n        cantidad_de_doc: data[i].cantidad_de_doc,\n        total_hh: data[i].total_hh,\n        especialidad: data[i].especialidad,\n        lista_de_cable: data[i].lista_de_cable,\n        titulo_documento: data[i].titulo_documento\n      });\n    }\n  }\n\n  render() {\n    return (\n      <BootstrapTable data={ jobs } cellEdit={ cellEditProp } insertRow={ true } pagination={ true } options={ options } exportCSV={ true } deleteRow={ true } selectRow={ selectRowProp }>\n        <TableHeaderColumn dataField='id' isKey={ true } autoValue={ true } filter={ { type: 'NumberFilter', delay: 1000, numberComparators: [ '=', '>', '<=' ] } }>ID</TableHeaderColumn>\n        <TableHeaderColumn dataField='nombre' editable={ { type: 'input' } } filter={ { type: 'TextFilter', delay: 1000 } }>nombre</TableHeaderColumn>\n        <TableHeaderColumn dataField='cantidad_de_doc' editable={ { validator: jobStatusValidator,type: 'input' } } filter={ { type: 'NumberFilter', delay: 1000, numberComparators: [ '=', '>', '<=' ] } }>cantidad_de_doc</TableHeaderColumn>\n        <TableHeaderColumn dataField='total_hh' editable={ { validator: jobStatusValidator,type: 'input' } } filter={ { type: 'NumberFilter', delay: 1000, numberComparators: [ '=', '>', '<=' ] } }>total_hh</TableHeaderColumn>\n        <TableHeaderColumn dataField='especialidad' editable={ { type: 'input' } } filter={ { type: 'TextFilter', delay: 1000 } }>especialidad</TableHeaderColumn>\n        <TableHeaderColumn dataField='lista_de_cable' editable={ { type: 'input' } } filter={ { type: 'NumberFilter', delay: 1000, numberComparators: [ '=', '>', '<=' ] } }>lista_de_cable</TableHeaderColumn>\n        <TableHeaderColumn dataField='titulo_documento' editable={ { type: 'input' } } filter={ {  type: 'TextFilter', delay: 1000  } }>titulo_documento</TableHeaderColumn>\n      </BootstrapTable>\n    );\n  }\n}\n","/* eslint max-len: 0 */\n/* eslint no-console: 0 */\nimport React from 'react';\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\nimport '../styles/react-bootstrap-table.css';\nimport moment from 'moment';\n\nlet jobs = [];\nlet jobTypes = [];\nlet jobTypesCliente = [];\n\nconst cellEditProp = {\n  mode: 'click',\n  blurToSave: true,\n  afterSaveCell: onAfterSaveCell\n};\nconst selectRowProp = {\n  mode: 'checkbox'\n};\n\nasync function onAfterSaveCell(row, cellName, cellValue) {\n  if(cellName === \"fecha_fin\"){\n    row.fecha_fin = moment(cellValue).format('YYYY-MM-DD');\n  }else if(cellName === \"fecha_inicio\"){\n    row.fehca_inicio = moment(cellValue).format('YYYY-MM-DD');\n  }\n  const settings = {\n    method: 'PUT',\n    body: JSON.stringify(row),\n    headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n    }\n  };\n  let url = \"/proyecto/\" + row.id;\n  try {\n      const fetchResponse = await fetch(url, settings);\n      const data = await fetchResponse.json();\n      console.log(data);\n  } catch (e) {\n      console.log(e);\n  }\n}\nasync function onAfterInsertRow(row) {\n  const settings = {\n    method: 'POST',\n    body: JSON.stringify(row),\n    headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n    }\n  };\n  try {\n      const fetchResponse = await fetch(`/proyecto`, settings);\n      const data = await fetchResponse.json();\n      console.log(data);\n  } catch (e) {\n      console.log(e);\n  }\n}\n\nasync function onAfterDeleteRow(rowKeys,rows) {\n  for(let i = 0; i<rowKeys.length; i++){\n    let url = '/proyecto/' + rows[i].id;\n    const settings = {\n    method: 'DELETE'\n    };\n    try {\n        const fetchResponse = await fetch(url, settings);\n        const data = await fetchResponse.json();\n        console.log(data);\n    } catch (e) {\n        console.log(e);\n    }\n  }\n}\n\nconst options = {\n  page: 1,  // which page you want to show as default\n  sizePerPageList: [ {\n    text: 5, value: 5\n  },\n  {\n    text: 10, value: 10\n  },\n  {\n    text: 15, value: 15\n  },\n  {\n    text: 20, value: 20\n  },\n  {\n    text: 30, value: 30\n  },\n  {\n    text: 40, value: 40\n  },\n  {\n    text: 50, value: 50\n  }/*,\n  {\n    text: 'All', value: jobs.length\n  }*/ ], // you can change the dropdown list for size per page\n  sizePerPage: 50,  // which size per page you want to locate as default\n  pageStartIndex: 1, // where to start counting the pages\n  paginationSize: 5,  // the pagination bar size.\n  prePage: 'Prev', // Previous page button text\n  nextPage: 'Next', // Next page button text\n  firstPage: 'First', // First page button text\n  lastPage: 'Last', // Last page button text\n  prePageTitle: 'Go to previous', // Previous page button title\n  nextPageTitle: 'Go to next', // Next page button title\n  firstPageTitle: 'Go to first', // First page button title\n  lastPageTitle: 'Go to Last', // Last page button title\n  paginationPosition: 'bottom',  // default is bottom, top and both is all available\n  // keepSizePerPageState: true //default is false, enable will keep sizePerPage dropdown state(open/clode) when external rerender happened\n  // hideSizePerPage: true > You can hide the dropdown for sizePerPage\n  // alwaysShowAllBtns: true // Always show next and previous button\n  // withFirstAndLast: false > Hide the going to First and Last page button\n  // hidePageListOnlyOnePage: true > Hide the page list if only one page.\n  afterDeleteRow: onAfterDeleteRow,\n  afterInsertRow: onAfterInsertRow\n  //handleConfirmDeleteRow: customConfirm REVISTAR CONFIRM\n};\nfunction jobStatusValidator(value, row) {\n  const nan = isNaN(parseInt(value, 10));\n  if (nan) {\n    return 'Tiene que ser un numero entero!';\n  }\n  return true;\n}\nexport default class proyecto extends React.Component {\n  constructor(props) {\n    super(props);\n    this.formatType = this.formatType.bind(this);\n  }\n  componentDidUpdate(prevProps) {\n    // Uso tipico (no olvides de comparar los props):\n    if (this.props.sendData !== prevProps.sendData) {\n      this.callApi();\n    }\n  }\n\n  componentDidMount() {\n    this.callApi()\n      .then(res => this.setState({ response: res }))\n      .catch(err => console.log(err));\n    this.callApiDroop()\n      .then(res => this.setState({ response: res }))\n      .catch(err => console.log(err));\n    this.callApiDroopCliente()\n      .then(res => this.setState({ response: res }))\n      .catch(err => console.log(err));\n  }\n\n  formatType(cell) {\n    return `TYPE_${cell}`;\n  }\n\n  callApi = async () => {\n    if(this.props.sendData){\n      jobs = [];\n      const response = await fetch('/proyecto/codigoUnificador/'+this.props.sendData);\n      var data = await response.json();\n      if (response.status !== 200) throw Error(data.message);\n      for (let i = 0; i < data.length; i++) {\n        let fecha1 = moment(data[i].fehca_inicio).format('YYYY-MM-DD');\n        let fecha2 = moment(data[i].fecha_fin).format('YYYY-MM-DD');\n        jobs.push({\n          id: data[i].id,\n          nombre: data[i].nombre,\n          cotizacion_id: data[i].cotizacion_id,\n          numero_proyecto: data[i].numero_proyecto,\n          cliente_id: data[i].cliente_id,\n          fehca_inicio: fecha1,\n          codigo_unificador: data[i].codigo_unificador,\n          activo: data[i].activo,\n          fecha_fin: fecha2\n        });\n      }\n    }else{\n      jobs = [];\n      const response = await fetch('/proyecto');\n      var data = await response.json();\n      if (response.status !== 200) throw Error(data.message);\n      for (let i = 0; i < data.length; i++) {\n        let fecha1 = moment(data[i].fehca_inicio).format('YYYY-MM-DD');\n        let fecha2 = moment(data[i].fecha_fin).format('YYYY-MM-DD');\n        jobs.push({\n          id: data[i].id,\n          nombre: data[i].nombre,\n          cotizacion_id: data[i].cotizacion_id,\n          numero_proyecto: data[i].numero_proyecto,\n          cliente_id: data[i].cliente_id,\n          fehca_inicio: fecha1,\n          codigo_unificador: data[i].codigo_unificador,\n          activo: data[i].activo,\n          fecha_fin: fecha2\n        });\n      }\n    }\n  }\n  callApiDroop = async () => {\n    const response = await fetch('/cotizacion');\n    var data = await response.json();\n    if (response.status !== 200) throw Error(data.message);\n    for (let i = 0; i < data.length; i++) {\n      jobTypes.push({\n        value: data[i].id,\n        text: data[i].titulo_cotiazacion\n      });\n    }\n  }\n\n  callApiDroopCliente = async () => {\n    const response = await fetch('/cliente');\n    var data = await response.json();\n    if (response.status !== 200) throw Error(data.message);\n    for (let i = 0; i < data.length; i++) {\n      jobTypesCliente.push({\n        value: data[i].id,\n        text: data[i].nombre\n      });\n    }\n  }\n\n  render() {\n    return (\n      <BootstrapTable data={ jobs } cellEdit={ cellEditProp } insertRow={ true } pagination={ true } options={ options } exportCSV={ true } deleteRow={ true } selectRow={ selectRowProp }>\n        <TableHeaderColumn dataField='id' isKey={ true } autoValue={ true }>ID</TableHeaderColumn>\n        <TableHeaderColumn dataField='nombre' editable={ { type: 'input' } } filter={ { type: 'TextFilter', delay: 1000 } }>nombre</TableHeaderColumn>\n        <TableHeaderColumn dataField='numero_proyecto' editable={ { type: 'input',validator: jobStatusValidator } } filter={ { type: 'TextFilter', delay: 1000 } }>numero_proyecto</TableHeaderColumn>\n        <TableHeaderColumn dataField='cliente_id' editable={ { type: 'select', options: { values: jobTypesCliente } } } filter={ { type: 'NumberFilter', delay: 1000, numberComparators: [ '=', '>', '<=' ] } }>cliente_id</TableHeaderColumn>\n        <TableHeaderColumn dataField='fehca_inicio' editable={ { type: 'date' } } filter={ { type: 'DateFilter' } }>fecha_inicio</TableHeaderColumn>\n        <TableHeaderColumn dataField='fecha_fin' editable={ { type: 'date' } } filter={ { type: 'DateFilter' } }>fecha_fin</TableHeaderColumn>\n        <TableHeaderColumn dataField='cotizacion_id'  editable={ { validator: jobStatusValidator,type: 'select', options: { values: jobTypes } } } filter={ { type: 'NumberFilter', delay: 1000, numberComparators: [ '=', '>', '<=' ] } }>cotizacion_id</TableHeaderColumn>\n        <TableHeaderColumn dataField='codigo_unificador' editable={ { type: 'input' } } filter={ { type: 'TextFilter', delay: 1000 } }>codigo_unificador</TableHeaderColumn>\n        <TableHeaderColumn dataField='activo' editable={ { type: 'input' } } filter={ { type: 'TextFilter', delay: 1000 } }>activo</TableHeaderColumn>\n      </BootstrapTable>\n    );\n  }\n}","/* eslint max-len: 0 */\n/* eslint no-console: 0 */\nimport React from 'react';\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\nimport '../styles/react-bootstrap-table.css';\nimport moment from 'moment';\n\nlet jobs = [];\nlet jobTypesControl = [];\nlet jobTypesCotizacion = [];\n\nconst cellEditProp = {\n  mode: 'click',\n  blurToSave: true,\n  afterSaveCell: onAfterSaveCell\n};\nconst selectRowProp = {\n  mode: 'checkbox'\n};\nfunction jobStatusValidator(value, row) {\n  const nan = isNaN(parseInt(value, 10));\n  if (nan) {\n    return 'Job Status must be a integer!';\n  }\n  return true;\n}\nasync function onAfterSaveCell(row, cellName, cellValue) {\n  if(cellName === \"fecha_envio\"){\n    row.fecha_envio = moment(cellValue).format('YYYY-MM-DD');\n  }\n  const settings = {\n    method: 'PUT',\n    body: JSON.stringify(row),\n    headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n    }\n  };\n  let url = \"/remitos/\" + row.id;\n  try {\n      const fetchResponse = await fetch(url, settings);\n      const data = await fetchResponse.json();\n  } catch (e) {\n      console.log(e);\n  }\n}\nasync function onAfterInsertRow(row) {\n  const settings = {\n    method: 'POST',\n    body: JSON.stringify(row),\n    headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n    }\n  };\n  try {\n      const fetchResponse = await fetch(`/remitos`, settings);\n      const data = await fetchResponse.json();\n  } catch (e) {\n      console.log(e);\n  }\n}\n\nasync function onAfterDeleteRow(rowKeys,rows) {\n  for(let i = 0; i<rowKeys.length; i++){\n    let url = '/remitos/' + rows[i].id;\n    const settings = {\n    method: 'DELETE'\n    };\n    try {\n        const fetchResponse = await fetch(url, settings);\n        const data = await fetchResponse.json();\n    } catch (e) {\n        console.log(e);\n    }\n  }\n}\n\nconst options = {\n  page: 1,  // which page you want to show as default\n  sizePerPageList: [ {\n    text: 5, value: 5\n  },\n  {\n    text: 10, value: 10\n  },\n  {\n    text: 15, value: 15\n  },\n  {\n    text: 20, value: 20\n  },\n  {\n    text: 30, value: 30\n  },\n  {\n    text: 40, value: 40\n  },\n  {\n    text: 50, value: 50\n  }/*,\n  {\n    text: 'All', value: jobs.length\n  }*/ ], // you can change the dropdown list for size per page\n  sizePerPage: 50,  // which size per page you want to locate as default\n  pageStartIndex: 1, // where to start counting the pages\n  paginationSize: 3,  // the pagination bar size.\n  prePage: 'Prev', // Previous page button text\n  nextPage: 'Next', // Next page button text\n  firstPage: 'First', // First page button text\n  lastPage: 'Last', // Last page button text\n  prePageTitle: 'Go to previous', // Previous page button title\n  nextPageTitle: 'Go to next', // Next page button title\n  firstPageTitle: 'Go to first', // First page button title\n  lastPageTitle: 'Go to Last', // Last page button title\n  paginationPosition: 'bottom',  // default is bottom, top and both is all available\n  // keepSizePerPageState: true //default is false, enable will keep sizePerPage dropdown state(open/clode) when external rerender happened\n  // hideSizePerPage: true > You can hide the dropdown for sizePerPage\n  // alwaysShowAllBtns: true // Always show next and previous button\n  // withFirstAndLast: false > Hide the going to First and Last page button\n  // hidePageListOnlyOnePage: true > Hide the page list if only one page.\n  afterDeleteRow: onAfterDeleteRow,\n  afterInsertRow: onAfterInsertRow\n  //handleConfirmDeleteRow: customConfirm REVISTAR CONFIRM\n};\n\nexport default class proyecto extends React.Component {\n  constructor(props) {\n    super(props);\n    this.formatType = this.formatType.bind(this);\n  }\n\n  componentDidMount() {\n    this.callApi()\n      .then(res => this.setState({ response: res }))\n      .catch(err => console.log(err));\n    this.callApiDroopControl()\n      .then(res => this.setState({ response: res }))\n      .catch(err => console.log(err));\n    this.callApiDroopCotizacion()\n      .then(res => this.setState({ response: res }))\n      .catch(err => console.log(err));\n  }\n\n  formatType(cell) {\n    return `TYPE_${cell}`;\n  }\n\n  callApi = async () => {\n    jobs = [];\n    const response = await fetch('/remitos');\n    var data = await response.json();\n    if (response.status !== 200) throw Error(data.message);\n    for (let i = 0; i < data.length; i++) {\n      let fecha1 = moment(data[i].fecha_envio).format('YYYY-MM-DD');\n      jobs.push({\n        id: data[i].id,\n        remito: data[i].remito,\n        fecha_envio: fecha1,\n        control_id: data[i].control_id,\n        control_cotizacion_id: data[i].control_cotizacion_id,\n        codigo_unificador: data[i].codigo_unificador\n      });\n    }\n  }\n\n  callApiDroopCotizacion = async () => {\n    const response = await fetch('/cotizacion');\n    var data = await response.json();\n    if (response.status !== 200) throw Error(data.message);\n    for (let i = 0; i < data.length; i++) {\n      jobTypesCotizacion.push({\n        value: data[i].id,\n        text: data[i].titulo_cotiazacion\n      });\n    }\n  }\n\n  callApiDroopControl = async () => {\n    const response = await fetch('/control');\n    var data = await response.json();\n    if (response.status !== 200) throw Error(data.message);\n    for (let i = 0; i < data.length; i++) {\n      jobTypesControl.push({\n        value: data[i].id,\n        text: data[i].numero_control\n      });\n    }\n  }\n\n  render() {\n    return (\n      <BootstrapTable data={ jobs } cellEdit={ cellEditProp } insertRow={ true } pagination={ true } options={ options } exportCSV={ true } deleteRow={ true } selectRow={ selectRowProp }>\n        <TableHeaderColumn dataField='id' isKey={ true } autoValue={ true } filter={ { type: 'NumberFilter', delay: 1000, numberComparators: [ '=', '>', '<=' ] } }>ID</TableHeaderColumn>\n        <TableHeaderColumn dataField='remito' editable={ { type: 'input' } } filter={ { type: 'TextFilter', delay: 1000 } }>remito</TableHeaderColumn>\n        <TableHeaderColumn dataField='fecha_envio' editable={ { type: 'date' } } filter={ { type: 'DateFilter' } }>fecha_envio</TableHeaderColumn>\n        <TableHeaderColumn dataField='control_id' editable={ { validator: jobStatusValidator,type: 'select', options: { values: jobTypesControl } } } filter={ { type: 'NumberFilter', delay: 1000, numberComparators: [ '=', '>', '<=' ] } }>control_id</TableHeaderColumn>\n        <TableHeaderColumn dataField='control_cotizacion_id' editable={ { validator: jobStatusValidator,type: 'select', options: { values: jobTypesCotizacion } } } filter={ { type: 'NumberFilter', delay: 1000, numberComparators: [ '=', '>', '<=' ] } }>control_cotizacion_id</TableHeaderColumn>\n        <TableHeaderColumn dataField='codigo_unificador' editable={ { type: 'input' } } filter={ { type: 'TextFilter', delay: 1000 } }>codigo_unificador</TableHeaderColumn>\n      </BootstrapTable>\n    );\n  }\n}","/* eslint max-len: 0 */\n/* eslint no-console: 0 */\nimport React from 'react';\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\nimport '../styles/react-bootstrap-table.css';\nimport moment from 'moment';\n\nlet jobs = [];\nlet jobTypesControl = [];\nlet jobTypesCotizacion = [];\nlet jobTypesDocumentos = [];\nlet jobTypesRemitos = [];\n\nconst cellEditProp = {\n  mode: 'click',\n  blurToSave: true,\n  afterSaveCell: onAfterSaveCell\n};\nconst selectRowProp = {\n  mode: 'checkbox'\n};\nfunction jobStatusValidator(value, row) {\n  const nan = isNaN(parseInt(value, 10));\n  if (nan) {\n    return 'Job Status must be a integer!';\n  }\n  return true;\n}\nasync function onAfterSaveCell(row, cellName, cellValue) {\n  const settings = {\n    method: 'PUT',\n    body: JSON.stringify(row),\n    headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n    }\n  };\n  let url = \"/datosRemitos/\" + row.id;\n  try {\n      const fetchResponse = await fetch(url, settings);\n      const data = await fetchResponse.json();\n  } catch (e) {\n      console.log(e);\n  }\n}\nasync function onAfterInsertRow(row) {\n  const settings = {\n    method: 'POST',\n    body: JSON.stringify(row),\n    headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n    }\n  };\n  try {\n      const fetchResponse = await fetch(`/datosRemitos/`, settings);\n      const data = await fetchResponse.json();\n  } catch (e) {\n      console.log(e);\n  }\n}\n\nasync function onAfterDeleteRow(rowKeys,rows) {\n  for(let i = 0; i<rowKeys.length; i++){\n    let url = '/datosRemitos/' + rows[i].id;\n    const settings = {\n    method: 'DELETE'\n    };\n    try {\n        const fetchResponse = await fetch(url, settings);\n        const data = await fetchResponse.json();\n    } catch (e) {\n        console.log(e);\n    }\n  }\n}\n\nconst options = {\n  page: 1,  // which page you want to show as default\n  sizePerPageList: [ {\n    text: 5, value: 5\n  },\n  {\n    text: 10, value: 10\n  },\n  {\n    text: 15, value: 15\n  },\n  {\n    text: 20, value: 20\n  },\n  {\n    text: 30, value: 30\n  },\n  {\n    text: 40, value: 40\n  },\n  {\n    text: 50, value: 50\n  }/*,\n  {\n    text: 'All', value: jobs.length\n  }*/ ], // you can change the dropdown list for size per page\n  sizePerPage: 50,  // which size per page you want to locate as default\n  pageStartIndex: 1, // where to start counting the pages\n  paginationSize: 3,  // the pagination bar size.\n  prePage: 'Prev', // Previous page button text\n  nextPage: 'Next', // Next page button text\n  firstPage: 'First', // First page button text\n  lastPage: 'Last', // Last page button text\n  prePageTitle: 'Go to previous', // Previous page button title\n  nextPageTitle: 'Go to next', // Next page button title\n  firstPageTitle: 'Go to first', // First page button title\n  lastPageTitle: 'Go to Last', // Last page button title\n  paginationPosition: 'bottom',  // default is bottom, top and both is all available\n  // keepSizePerPageState: true //default is false, enable will keep sizePerPage dropdown state(open/clode) when external rerender happened\n  // hideSizePerPage: true > You can hide the dropdown for sizePerPage\n  // alwaysShowAllBtns: true // Always show next and previous button\n  // withFirstAndLast: false > Hide the going to First and Last page button\n  // hidePageListOnlyOnePage: true > Hide the page list if only one page.\n  afterDeleteRow: onAfterDeleteRow,\n  afterInsertRow: onAfterInsertRow\n  //handleConfirmDeleteRow: customConfirm REVISTAR CONFIRM\n};\n\nexport default class proyecto extends React.Component {\n  constructor(props) {\n    super(props);\n    this.formatType = this.formatType.bind(this);\n  }\n\n  componentDidMount() {\n    this.callApi()\n      .then(res => this.setState({ response: res }))\n      .catch(err => console.log(err));\n    this.callApiDroopControl()\n      .then(res => this.setState({ response: res }))\n      .catch(err => console.log(err));\n    this.callApiDroopCotizacion()\n      .then(res => this.setState({ response: res }))\n      .catch(err => console.log(err));\n    this.callApiDroopDocumentos()\n      .then(res => this.setState({ response: res }))\n      .catch(err => console.log(err));\n    this.callApiDroopRemitos()\n      .then(res => this.setState({ response: res }))\n      .catch(err => console.log(err));\n  }\n\n  formatType(cell) {\n    return `TYPE_${cell}`;\n  }\n\n  callApi = async () => {\n    jobs = [];\n    const response = await fetch('/datosRemitos/');\n    var data = await response.json();\n    if (response.status !== 200) throw Error(data.message);\n    for (let i = 0; i < data.length; i++) {\n      jobs.push({\n        id: data[i].id,\n        remitos_id: data[i].remitos_id,\n        calificacion: data[i].calificacion,\n        remitos_control_id: data[i].remitos_control_id,\n        list_docs_id: data[i].list_docs_id,\n        remitos_control_cotizacion_id: data[i].remitos_control_cotizacion_id\n      });\n    }\n  }\n\n  callApiDroopCotizacion = async () => {\n    const response = await fetch('/cotizacion');\n    var data = await response.json();\n    if (response.status !== 200) throw Error(data.message);\n    for (let i = 0; i < data.length; i++) {\n      jobTypesCotizacion.push({\n        value: data[i].id,\n        text: data[i].titulo_cotiazacion\n      });\n    }\n  }\n\n  callApiDroopControl = async () => {\n    const response = await fetch('/control');\n    var data = await response.json();\n    if (response.status !== 200) throw Error(data.message);\n    for (let i = 0; i < data.length; i++) {\n      jobTypesControl.push({\n        value: data[i].id,\n        text: data[i].numero_control\n      });\n    }\n  }\n\n  callApiDroopDocumentos = async () => {\n    const response = await fetch('/list_docs');\n    var data = await response.json();\n    if (response.status !== 200) throw Error(data.message);\n    for (let i = 0; i < data.length; i++) {\n        let mergeNombre = data[i].nombre + \" \" + data[i].titulo_documento;\n        jobTypesDocumentos.push({\n          value: data[i].id,\n          text: mergeNombre\n        });\n    }\n  }\n\n  callApiDroopRemitos = async () => {\n    const response = await fetch('/remitos');\n    var data = await response.json();\n    if (response.status !== 200) throw Error(data.message);\n    for (let i = 0; i < data.length; i++) {\n      jobTypesRemitos.push({\n        value: data[i].id,\n        text: data[i].remito\n      });\n    }\n  }\n\n  render() {\n    return (\n      <BootstrapTable data={ jobs } cellEdit={ cellEditProp } insertRow={ true } pagination={ true } options={ options } exportCSV={ true } deleteRow={ true } selectRow={ selectRowProp }>\n        <TableHeaderColumn dataField='id' isKey={ true } autoValue={ true } filter={ { type: 'NumberFilter', delay: 1000, numberComparators: [ '=', '>', '<=' ] } }>ID</TableHeaderColumn>\n        <TableHeaderColumn dataField='remitos_id' editable={ { validator: jobStatusValidator,type: 'select', options: { values: jobTypesRemitos } } } filter={ { type: 'NumberFilter', delay: 1000, numberComparators: [ '=', '>', '<=' ] } }>remitos_id</TableHeaderColumn>\n        <TableHeaderColumn dataField='remitos_control_id' editable={ { validator: jobStatusValidator,type: 'select', options: { values: jobTypesControl } } } filter={ { type: 'NumberFilter', delay: 1000, numberComparators: [ '=', '>', '<=' ] } }>remitos_control_id</TableHeaderColumn>\n        <TableHeaderColumn dataField='remitos_control_cotizacion_id' editable={ { validator: jobStatusValidator,type: 'select', options: { values: jobTypesCotizacion } } } filter={ { type: 'NumberFilter', delay: 1000, numberComparators: [ '=', '>', '<=' ] } }>remitos_control_cotizacion_id</TableHeaderColumn>\n        <TableHeaderColumn dataField='calificacion' editable={ { type: 'input' } } filter={ { type: 'TextFilter', delay: 1000 } }>calificacion</TableHeaderColumn>\n        <TableHeaderColumn dataField='list_docs_id' editable={ { validator: jobStatusValidator,type: 'select', options: { values: jobTypesDocumentos } } } filter={ { type: 'NumberFilter', delay: 1000, numberComparators: [ '=', '>', '<=' ] } }>list_docs_id</TableHeaderColumn>\n      </BootstrapTable>\n    );\n  }\n}","/* eslint max-len: 0 */\n/* eslint no-console: 0 */\nimport React from 'react';\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\nimport '../styles/react-bootstrap-table.css';\nimport moment from 'moment';\n\n\nlet jobs = [];\nlet jobTypesCotizacion = [];\nlet jobTypesControl = [];\nlet jobTypesCertificacion = [];\nlet jobTypesDocumentos = [];\n\nconst cellEditProp = {\n  mode: 'click',\n  blurToSave: true,\n  afterSaveCell: onAfterSaveCell\n};\nconst selectRowProp = {\n  mode: 'checkbox'\n};\nfunction jobStatusValidator(value, row) {\n    const nan = isNaN(parseInt(value, 10));\n    if (nan) {\n      return 'Job Status must be a integer!';\n    }\n    return true;\n  }\nasync function onAfterSaveCell(row, cellName, cellValue) {\n  if(cellName === \"fechaDeEmision\"){\n    row.fechaDeEmision = moment(cellValue).format('YYYY-MM-DD');\n  }\n  const settings = {\n    method: 'PUT',\n    body: JSON.stringify(row),\n    headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n    }\n  };\n  let url = \"/datosCertificacion/\" + row.id;\n  try {\n      const fetchResponse = await fetch(url, settings);\n      const data = await fetchResponse.json();\n      console.log(data);\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nasync function onAfterInsertRow(row) {\n  const settings = {\n    method: 'POST',\n    body: JSON.stringify(row),\n    headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n    }\n  };\n  try {\n      const fetchResponse = await fetch(`/datosCertificacion`, settings);\n      const data = await fetchResponse.json();\n      console.log(data);\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nasync function onAfterDeleteRow(rowKeys,rows) {\n  for(let i = 0; i<rowKeys.length; i++){\n    let url = '/datosCertificacion/' + rows[i].id;\n    const settings = {\n    method: 'DELETE'\n    };\n    try {\n        const fetchResponse = await fetch(url, settings);\n        const data = await fetchResponse.json();\n        console.log(data);\n    } catch (e) {\n      console.log(e);\n    }\n  }\n}\n\nconst options = {\n  page: 1,  // which page you want to show as default\n  sizePerPageList: [ {\n    text: 5, value: 5\n  },\n  {\n    text: 10, value: 10\n  },\n  {\n    text: 15, value: 15\n  },\n  {\n    text: 20, value: 20\n  },\n  {\n    text: 30, value: 30\n  },\n  {\n    text: 40, value: 40\n  },\n  {\n    text: 50, value: 50\n  }/*,\n  {\n    text: 'All', value: jobs.length\n  }*/ ], // you can change the dropdown list for size per page\n  sizePerPage: 50,  // which size per page you want to locate as default\n  pageStartIndex: 1, // where to start counting the pages\n  paginationSize: 3,  // the pagination bar size.\n  prePage: 'Prev', // Previous page button text\n  nextPage: 'Next', // Next page button text\n  firstPage: 'First', // First page button text\n  lastPage: 'Last', // Last page button text\n  prePageTitle: 'Go to previous', // Previous page button title\n  nextPageTitle: 'Go to next', // Next page button title\n  firstPageTitle: 'Go to first', // First page button title\n  lastPageTitle: 'Go to Last', // Last page button title\n  paginationPosition: 'bottom',  // default is bottom, top and both is all available\n  // keepSizePerPageState: true //default is false, enable will keep sizePerPage dropdown state(open/clode) when external rerender happened\n  // hideSizePerPage: true > You can hide the dropdown for sizePerPage\n  // alwaysShowAllBtns: true // Always show next and previous button\n  // withFirstAndLast: false > Hide the going to First and Last page button\n  // hidePageListOnlyOnePage: true > Hide the page list if only one page.\n  afterDeleteRow: onAfterDeleteRow,\n  afterInsertRow: onAfterInsertRow\n  //handleConfirmDeleteRow: customConfirm REVISTAR CONFIRM\n};\n\nexport default class datosCertificacion extends React.Component {\n  constructor(props) {\n    super(props);\n    this.formatType = this.formatType.bind(this);\n  }\n\n  formatType(cell) {\n    return `TYPE_${cell}`;\n  }\n\n  componentDidMount() {\n    this.callApi()\n      .then(res => this.setState({ response: res }))\n      .catch(err => console.log(err));\n    this.callApiDroopCotizacion()\n      .then(res => this.setState({ response: res }))\n      .catch(err => console.log(err));\n    this.callApiDroopControl()\n      .then(res => this.setState({ response: res }))\n      .catch(err => console.log(err));\n    this.callApiDroopCertificacion()\n      .then(res => this.setState({ response: res }))\n      .catch(err => console.log(err));\n    this.callApiDroopDocumentos()\n      .then(res => this.setState({ response: res }))\n      .catch(err => console.log(err));\n  }\n\n  componentDidUpdate(prevProps) {\n    // Uso tipico (no olvides de comparar los props):\n    if (this.props.sendData !== prevProps.sendData) {\n      this.callApi();\n    }\n  }\n\n  callApi = async () => {\n    if(this.props.sendData){\n      jobs = [];\n      const response = await fetch('/datosCertificacion/codigoUnificador/'+this.props.sendData);\n      var data = await response.json();\n      if (response.status !== 200) throw Error(data.message);\n      for (let i = 0; i < data.length; i++) {\n        jobs.push({\n          id: data[i].id,\n          certificacion_id: data[i].certificacion_id,\n          certificacion_control_id: data[i].certificacion_control_id,\n          certificacion_control_cotizacion_id: data[i].certificacion_control_cotizacion_id,\n          costoHoraDoc: data[i].costoHoraDoc,\n          cantidadDeHoras: data[i].cantidadDeHoras,\n          cantidadDeDocs: data[i].cantidadDeDocs,\n          porcentajeAvanceAnterior: data[i].porcentajeAvanceAnterior,\n          porcentajeAvancePrecente: data[i].porcentajeAvancePrecente,\n          porcentajeAvanceAcumulado: data[i].porcentajeAvanceAcumulado,\n          total_certificacion: data[i].total_certificacion,\n          list_docs_id: data[i].list_docs_id\n        });\n      }\n    }else{\n      jobs = [];\n      const response = await fetch('/datosCertificacion');\n      var data = await response.json();\n      if (response.status !== 200) throw Error(data.message);\n      for (let i = 0; i < data.length; i++) {\n        jobs.push({\n          id: data[i].id,\n          certificacion_id: data[i].certificacion_id,\n          certificacion_control_id: data[i].certificacion_control_id,\n          certificacion_control_cotizacion_id: data[i].certificacion_control_cotizacion_id,\n          costoHoraDoc: data[i].costoHoraDoc,\n          cantidadDeHoras: data[i].cantidadDeHoras,\n          cantidadDeDocs: data[i].cantidadDeDocs,\n          porcentajeAvanceAnterior: data[i].porcentajeAvanceAnterior,\n          porcentajeAvancePrecente: data[i].porcentajeAvancePrecente,\n          porcentajeAvanceAcumulado: data[i].porcentajeAvanceAcumulado,\n          total_certificacion: data[i].total_certificacion,\n          list_docs_id: data[i].list_docs_id\n        });\n      }\n    }\n  }\n  callApiDroopCotizacion = async () => {\n    const response = await fetch('/cotizacion');\n    var data = await response.json();\n    if (response.status !== 200) throw Error(data.message);\n    for (let i = 0; i < data.length; i++) {\n      jobTypesCotizacion.push({\n        value: data[i].id,\n        text: data[i].titulo_cotiazacion\n      });\n    }\n  }\n\n  callApiDroopControl = async () => {\n    const response = await fetch('/control');\n    var data = await response.json();\n    if (response.status !== 200) throw Error(data.message);\n    for (let i = 0; i < data.length; i++) {\n      jobTypesControl.push({\n        value: data[i].id,\n        text: data[i].numero_control\n      });\n    }\n  }\n\n  callApiDroopCertificacion = async () => {\n    const response = await fetch('/certificacion');\n    var data = await response.json();\n    if (response.status !== 200) throw Error(data.message);\n    for (let i = 0; i < data.length; i++) {\n      jobTypesCertificacion.push({\n        value: data[i].id,\n        text: data[i].numeroDePedido\n      });\n    }\n  }\n\n  callApiDroopDocumentos = async () => {\n    const response = await fetch('/list_docs');\n    var data = await response.json();\n    if (response.status !== 200) throw Error(data.message);\n    for (let i = 0; i < data.length; i++) {\n      let mergeNombre = data[i].nombre + \" \" + data[i].titulo_documento;\n      jobTypesDocumentos.push({\n        value: data[i].id,\n        text: mergeNombre\n      });\n    }\n  }\n  render() {\n    // custom attributes on editor\n    return (\n      <BootstrapTable data={ jobs } cellEdit={ cellEditProp } insertRow={ true } pagination={ true } options={ options } exportCSV={ true } deleteRow={ true } selectRow={ selectRowProp }>\n        <TableHeaderColumn dataField='id' isKey={ true } autoValue={ true } filter={ { type: 'NumberFilter', delay: 1000, numberComparators: [ '=', '>', '<=' ] } }>ID</TableHeaderColumn>\n        <TableHeaderColumn dataField='certificacion_id' editable={ { validator: jobStatusValidator,type: 'select', options: { values: jobTypesCertificacion } } } filter={ { type: 'NumberFilter', delay: 1000, numberComparators: [ '=', '>', '<=' ] } }>certificacion_id</TableHeaderColumn>\n        <TableHeaderColumn dataField='certificacion_control_id' editable={ { validator: jobStatusValidator,type: 'select', options: { values: jobTypesControl } } } filter={ { type: 'NumberFilter', delay: 1000, numberComparators: [ '=', '>', '<=' ] } }>certificacion_control_id</TableHeaderColumn>\n        <TableHeaderColumn dataField='certificacion_control_cotizacion_id' editable={ { validator: jobStatusValidator,type: 'select', options: { values: jobTypesCotizacion } } } filter={ { type: 'NumberFilter', delay: 1000, numberComparators: [ '=', '>', '<=' ] } }>certificacion_control_cotizacion_id</TableHeaderColumn>\n        <TableHeaderColumn dataField='list_docs_id' editable={ { validator: jobStatusValidator,type: 'select', options: { values: jobTypesDocumentos } } } filter={ { type: 'NumberFilter', delay: 1000, numberComparators: [ '=', '>', '<=' ] } }>list_docs_id</TableHeaderColumn>\n        <TableHeaderColumn dataField='costoHoraDoc' editable={ { validator: jobStatusValidator,type: 'input' } } filter={ { type: 'NumberFilter', delay: 1000, numberComparators: [ '=', '>', '<=' ] } }>costoHoraDoc</TableHeaderColumn>\n        <TableHeaderColumn dataField='cantidadDeHoras' editable={ { validator: jobStatusValidator,type: 'input' } } filter={ { type: 'NumberFilter', delay: 1000, numberComparators: [ '=', '>', '<=' ] } }>cantidadDeHoras</TableHeaderColumn>\n        <TableHeaderColumn dataField='cantidadDeDocs' editable={ { validator: jobStatusValidator,type: 'input' } } filter={ { type: 'NumberFilter', delay: 1000, numberComparators: [ '=', '>', '<=' ] } }>cantidadDeDocs</TableHeaderColumn>\n        <TableHeaderColumn dataField='porcentajeAvanceAnterior' editable={ { validator: jobStatusValidator,type: 'input' } } filter={ { type: 'NumberFilter', delay: 1000, numberComparators: [ '=', '>', '<=' ] } }>porcentajeAvanceAnterior</TableHeaderColumn>\n        <TableHeaderColumn dataField='porcentajeAvancePrecente' editable={ { validator: jobStatusValidator,type: 'input' } } filter={ { type: 'NumberFilter', delay: 1000, numberComparators: [ '=', '>', '<=' ] } }>porcentajeAvancePrecente</TableHeaderColumn>\n        <TableHeaderColumn dataField='porcentajeAvanceAcumulado' editable={ { validator: jobStatusValidator,type: 'input' } } filter={ { type: 'NumberFilter', delay: 1000, numberComparators: [ '=', '>', '<=' ] } }>porcentajeAvanceAcumulado</TableHeaderColumn>\n        <TableHeaderColumn dataField='total_certificacion' editable={ { validator: jobStatusValidator,type: 'input' } } filter={ { type: 'NumberFilter', delay: 1000, numberComparators: [ '=', '>', '<=' ] } }>total_certificacion</TableHeaderColumn>\n      </BootstrapTable>\n    );\n  }\n}","import React from \"react\";\n\n/* Import Components */\n//import Tree from \"TreeProyecto\";\nimport Proyecto from './Proyecto';\nimport Certificacion from './Certificacion';\nimport DatosCertificacion from './DatosCertificacion';\nimport Control from './Control';\nimport Cotizacion from './Cotizacion';\nimport DatosControl from './DatosControl';\nimport DatosCotiazacion from './DatosCotizacion';\n\nexport default class NameForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchCodigoUnificador: 0,\n    };\n    this.searchData = this.searchData.bind(this);\n  }\n\n  searchData = async () => {\n    this.setState({searchCodigoUnificador: this.props.changeLink});\n  }\n\n  render() {\n    return (\n      <div>\n      <button onClick={this.searchData} className=\"btn btn-primary\">Buscar</button>\n      <br/>\n      <br/>\n      <br/>\n      <label>Proyecto</label>\n      <Proyecto sendData={this.state.searchCodigoUnificador}/>\n      <label>Cotizacion</label>\n      <Cotizacion sendData={this.state.searchCodigoUnificador}/>\n      <DatosCotiazacion sendData={this.state.searchCodigoUnificador}/>\n      <label>Control</label>\n      <Control sendData={this.state.searchCodigoUnificador}/>\n      <DatosControl sendData={this.state.searchCodigoUnificador}/>\n      <label>Certificacion</label>\n      <Certificacion sendData={this.state.searchCodigoUnificador}/>\n      <DatosCertificacion sendData={this.state.searchCodigoUnificador}/>\n      </div>\n    );\n  }\n}","import React from \"react\";\n\n/* Import Components */\nimport BusquedaCodigoUnificador from \"../BusquedaCodigoUnificador\";\n\nexport default class NameForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n  handleChange(values) {\n    this.setState({value: values.target.value});\n  }\n  render() {\n    return (\n      <div>\n      <form onSubmit={this.handleSubmit}>\n        <label>\n          Name:\n          <input type=\"text\" value={this.state.value} onChange={this.handleChange} />\n        </label>\n      </form>\n      <BusquedaCodigoUnificador changeLink={this.state.value}/>\n      </div>\n    );\n  }\n}","import React, { Component } from 'react';\nimport FormContainer from \"./form/FormCodigoUnificador\";\n\n\nexport default class formContainer extends Component {\n  render() {\n    return (\n      <div className=\"col-md-12\">\n        <h3>Busqueda por Codigo Unificador</h3>\n        <FormContainer />\n      </div>\n    );\n  }\n}","import React from 'react';\n\nexport default class SendDataButton extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchDataId: 0,\n    };\n    this.searchData = this.searchData.bind(this);\n  }\n  \n  searchData = async () => {\n    if(window.confirm('Desea generar los datos?')){\n      for(let i = 0; i < this.props.changeLink.length; i++){\n        let idSend = {'id' : this.props.changeLink[i].id};\n        let settings = {\n          method: 'POST',\n          body: JSON.stringify(idSend),\n          headers: {\n              Accept: 'application/json',\n              'Content-Type': 'application/json',\n          }\n        };\n        try {\n          let fetchResponse = await fetch(`/cotizacion/updateControl`, settings);\n          let data = await fetchResponse.json();\n        } catch (e) {\n          console.log(e);\n        }\n      }\n      alert(\"Datos Generados\");\n    }\n  }\n\n  render() {\n    return (\n      <button onClick={this.searchData} className=\"btn btn-primary\">Generar Datos Control</button>\n    )\n  }\n}","import React from 'react';\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\nimport '../styles/react-bootstrap-table.css';\nimport SendDataButton from \"./button/sendDataButton\";\nimport moment from 'moment';\n\nlet jobs = [];\nlet jobTypes = [];\n\nconst selectRowProp = {\n  mode: 'checkbox',\n  clickToSelect: true,\n  onSelect: onRowSelect\n}\nlet dataSelected = [];\nconst options = {\n  page: 1,  // which page you want to show as default\n  sizePerPageList: [ {\n    text: 5, value: 5\n  },\n  {\n    text: 10, value: 10\n  },\n  {\n    text: 15, value: 15\n  },\n  {\n    text: 20, value: 20\n  },\n  {\n    text: 30, value: 30\n  },\n  {\n    text: 40, value: 40\n  },\n  {\n    text: 50, value: 50\n  }/*,\n  {\n    text: 'All', value: jobs.length\n  }*/ ], // you can change the dropdown list for size per page\n  sizePerPage: 50,  // which size per page you want to locate as default\n  pageStartIndex: 1, // where to start counting the pages\n  paginationSize: 3,  // the pagination bar size.\n  prePage: 'Prev', // Previous page button text\n  nextPage: 'Next', // Next page button text\n  firstPage: 'First', // First page button text\n  lastPage: 'Last', // Last page button text\n  prePageTitle: 'Go to previous', // Previous page button title\n  nextPageTitle: 'Go to next', // Next page button title\n  firstPageTitle: 'Go to first', // First page button title\n  lastPageTitle: 'Go to Last', // Last page button title\n  paginationPosition: 'bottom',  // default is bottom, top and both is all available\n  // keepSizePerPageState: true //default is false, enable will keep sizePerPage dropdown state(open/clode) when external rerender happened\n  // hideSizePerPage: true > You can hide the dropdown for sizePerPage\n  // alwaysShowAllBtns: true // Always show next and previous button\n  // withFirstAndLast: false > Hide the going to First and Last page button\n  // hidePageListOnlyOnePage: true > Hide the page list if only one page.\n  //handleConfirmDeleteRow: customConfirm REVISTAR CONFIRM\n};\n\nfunction onRowSelect(row, isSelected, e, rowIndex) {\n  dataSelected.push({\n    id: row.id\n  });\n}\n\nexport default class generarDatosControl extends React.Component {\n  constructor(props) {\n    super(props);\n    this.formatType = this.formatType.bind(this);\n  }\n\n  componentDidMount(){\n    this.callApi()\n      .then(res => this.setState({ response: res }))\n      .catch(err => console.log(err));\n    this.callApiDroop()\n      .then(res => this.setState({ response: res }))\n      .catch(err => console.log(err));\n  }\n\n  formatType(cell) {\n    return `TYPE_${cell}`;\n  }\n\n  callApi = async () => {\n      jobs = [];\n      const response = await fetch('/cotizacion/generarDatosControlData');\n      var data = await response.json();\n      if (response.status !== 200) throw Error(data.message);\n      for (let i = 0; i < data.length; i++) {\n        let fecha1 = moment(data[i].fecha).format('YYYY-MM-DD');\n        jobs.push({\n          id: data[i].id,\n          revision: data[i].revision,\n          fecha: fecha1,\n          titulo_cotiazacion: data[i].titulo_cotiazacion,\n          numero_doc: data[i].numero_doc,\n          codigo_unificador: data[i].codigo_unificador,\n          cliente_id: data[i].cliente_id\n        });\n      }\n  }\n\n  callApiDroop = async () => {\n    const response = await fetch('/cliente');\n    var data = await response.json();\n    if (response.status !== 200) throw Error(data.message);\n    for (let i = 0; i < data.length; i++) {\n      jobTypes.push({\n        value: data[i].id,\n        text: data[i].nombre\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <BootstrapTable data={ jobs }  pagination={ true } options={ options } exportCSV={ true }  selectRow={ selectRowProp }>\n        <TableHeaderColumn dataField='id' isKey={ true } autoValue={ true } filter={ { type: 'NumberFilter', delay: 1000, numberComparators: [ '=', '>', '<=' ] } }>ID</TableHeaderColumn>\n        <TableHeaderColumn dataField='revision' editable={ { type: 'input' } } filter={ { type: 'TextFilter', delay: 1000 } }>revision</TableHeaderColumn>\n        <TableHeaderColumn dataField='fecha' editable={ { type: 'date' } } filter={ { type: 'DateFilter' } }>fecha</TableHeaderColumn>\n        <TableHeaderColumn dataField='titulo_cotiazacion' editable={ { type: 'input' } } filter={ { type: 'TextFilter', delay: 1000 } }>titulo_cotiazacion</TableHeaderColumn>\n        <TableHeaderColumn dataField='numero_doc' editable={ { type: 'input' } } filter={ { type: 'TextFilter', delay: 1000 } }>numero_doc</TableHeaderColumn>\n        <TableHeaderColumn dataField='codigo_unificador' editable={ { type: 'input' } } filter={ { type: 'TextFilter', delay: 1000 } }>codigo_unificador</TableHeaderColumn>\n        <TableHeaderColumn dataField='cliente_id' editable={ { type: 'select', options: { values: jobTypes } } } filter={ { type: 'NumberFilter', delay: 1000, numberComparators: [ '=', '>', '<=' ] } }>cliente_id</TableHeaderColumn>\n        </BootstrapTable>\n        <SendDataButton changeLink={dataSelected}/>\n      </div>\n    );\n  }\n}","import React, { Component } from 'react';\nimport GenerarDatosControl from \"./GenerarDatosControl\";\n\nexport default class formContainer extends Component {\n  render() {\n    return (\n      <div className=\"col-md-12\">\n        <h3>Generar Datos Control</h3>\n        <GenerarDatosControl />\n      </div>\n    );\n  }\n}","/* eslint max-len: 0 */\n/* eslint no-console: 0 */\nimport React from 'react';\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\nimport '../styles/react-bootstrap-table.css';\nimport moment from 'moment';\n\nlet jobs = [];\nlet jobTypesCotizacion = [];\nlet jobTypesControl = [];\nlet jobTypesCertificacion = [];\nlet jobTypesDocumentos = [];\n\nconst cellEditProp = {\n  mode: 'click',\n  blurToSave: true,\n  afterSaveCell: onAfterSaveCell\n};\n\nfunction jobStatusValidator(value, row) {\n    const nan = isNaN(parseInt(value, 10));\n    if (nan) {\n      return 'Job Status must be a integer!';\n    }\n    return true;\n  }\nasync function onAfterSaveCell(row, cellName, cellValue) {\n  if(cellName === \"fechaDeEmision\"){\n    row.fechaDeEmision = moment(cellValue).format('YYYY-MM-DD');\n  }\n  if(window.confirm('Desea Certificar?')){\n    const settings = {\n      method: 'POST',\n      body: JSON.stringify(row),\n      headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json',\n      }\n    };\n    let url = \"/datosCertificacion/updateAvance/\";\n    try {\n        const fetchResponse = await fetch(url, settings);\n        const data = await fetchResponse.json();\n        alert(\"Avace certificado\");\n    } catch (e) {\n      console.log(e);\n    }\n  }\n}\n\nconst options = {\n  page: 1,  // which page you want to show as default\n  sizePerPageList: [ {\n    text: 5, value: 5\n  },\n  {\n    text: 10, value: 10\n  },\n  {\n    text: 15, value: 15\n  },\n  {\n    text: 20, value: 20\n  },\n  {\n    text: 30, value: 30\n  },\n  {\n    text: 40, value: 40\n  },\n  {\n    text: 50, value: 50\n  }/*,\n  {\n    text: 'All', value: jobs.length\n  }*/ ], // you can change the dropdown list for size per page\n  sizePerPage: 50,  // which size per page you want to locate as default\n  pageStartIndex: 1, // where to start counting the pages\n  paginationSize: 3,  // the pagination bar size.\n  prePage: 'Prev', // Previous page button text\n  nextPage: 'Next', // Next page button text\n  firstPage: 'First', // First page button text\n  lastPage: 'Last', // Last page button text\n  prePageTitle: 'Go to previous', // Previous page button title\n  nextPageTitle: 'Go to next', // Next page button title\n  firstPageTitle: 'Go to first', // First page button title\n  lastPageTitle: 'Go to Last', // Last page button title\n  paginationPosition: 'bottom',  // default is bottom, top and both is all available\n  // keepSizePerPageState: true //default is false, enable will keep sizePerPage dropdown state(open/clode) when external rerender happened\n  // hideSizePerPage: true > You can hide the dropdown for sizePerPage\n  // alwaysShowAllBtns: true // Always show next and previous button\n  // withFirstAndLast: false > Hide the going to First and Last page button\n  // hidePageListOnlyOnePage: true > Hide the page list if only one page.\n  //handleConfirmDeleteRow: customConfirm REVISTAR CONFIRM\n};\n\nexport default class datosCertificacion extends React.Component {\n  constructor(props) {\n    super(props);\n    this.formatType = this.formatType.bind(this);\n  }\n\n  formatType(cell) {\n    return `TYPE_${cell}`;\n  }\n\n  componentDidMount() {\n    this.callApi()\n      .then(res => this.setState({ response: res }))\n      .catch(err => console.log(err));\n    this.callApiDroopCotizacion()\n      .then(res => this.setState({ response: res }))\n      .catch(err => console.log(err));\n    this.callApiDroopControl()\n      .then(res => this.setState({ response: res }))\n      .catch(err => console.log(err));\n    this.callApiDroopCertificacion()\n      .then(res => this.setState({ response: res }))\n      .catch(err => console.log(err));\n    this.callApiDroopDocumentos()\n      .then(res => this.setState({ response: res }))\n      .catch(err => console.log(err));\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.idSearch !== prevProps.idSearch) {\n        this.callApi();\n    }\n  }\n\n  callApi = async () => {\n    jobs = [];\n    if(this.props.idSearch){\n        let test = this.props.idSearch;\n        let response = await fetch('/datosCertificacion/codigoUnificador/' + test);\n        var data = await response.json();\n        if (response.status !== 200) throw Error(data.message);\n        for (let i = 0; i < data.length; i++) {\n            jobs.push({\n                id: data[i].id,\n                certificacion_id: data[i].certificacion_id,\n                certificacion_control_id: data[i].certificacion_control_id,\n                certificacion_control_cotizacion_id: data[i].certificacion_control_cotizacion_id,\n                porcentajeAvanceAcumulado: data[i].porcentajeAvanceAcumulado,\n                list_docs_id: data[i].list_docs_id,\n                inputSend: 0,\n            });\n        }\n    }\n  }\n\n  callApiDroopCotizacion = async () => {\n    const response = await fetch('/cotizacion');\n    var data = await response.json();\n    if (response.status !== 200) throw Error(data.message);\n    for (let i = 0; i < data.length; i++) {\n      jobTypesCotizacion.push({\n        value: data[i].id,\n        text: data[i].titulo_cotiazacion\n      });\n    }\n  }\n\n  callApiDroopControl = async () => {\n    const response = await fetch('/control');\n    var data = await response.json();\n    if (response.status !== 200) throw Error(data.message);\n    for (let i = 0; i < data.length; i++) {\n      jobTypesControl.push({\n        value: data[i].id,\n        text: data[i].numero_control\n      });\n    }\n  }\n\n  callApiDroopCertificacion = async () => {\n    const response = await fetch('/certificacion');\n    var data = await response.json();\n    if (response.status !== 200) throw Error(data.message);\n    for (let i = 0; i < data.length; i++) {\n      jobTypesCertificacion.push({\n        value: data[i].id,\n        text: data[i].numeroDePedido\n      });\n    }\n  }\n\n  callApiDroopDocumentos = async () => {\n    const response = await fetch('/list_docs');\n    var data = await response.json();\n    if (response.status !== 200) throw Error(data.message);\n    for (let i = 0; i < data.length; i++) {\n      let mergeNombre = data[i].nombre + \" \" + data[i].titulo_documento;\n      jobTypesDocumentos.push({\n        value: data[i].id,\n        text: mergeNombre\n      });\n    }\n  }\n  render() {\n    // custom attributes on editor\n    return (\n        <div>\n        <BootstrapTable data={ jobs } cellEdit={ cellEditProp } pagination={ true } options={ options } exportCSV={ true }>\n            <TableHeaderColumn dataField='id' isKey={ true } autoValue={ true } filter={ { type: 'NumberFilter', delay: 1000, numberComparators: [ '=', '>', '<=' ] } }>ID</TableHeaderColumn>\n            <TableHeaderColumn dataField='certificacion_id' editable={ { validator: jobStatusValidator,type: 'select', options: { values: jobTypesCertificacion } } } filter={ { type: 'NumberFilter', delay: 1000, numberComparators: [ '=', '>', '<=' ] } }>certificacion_id</TableHeaderColumn>\n            <TableHeaderColumn dataField='certificacion_control_id' editable={ { validator: jobStatusValidator,type: 'select', options: { values: jobTypesControl } } } filter={ { type: 'NumberFilter', delay: 1000, numberComparators: [ '=', '>', '<=' ] } }>certificacion_control_id</TableHeaderColumn>\n            <TableHeaderColumn dataField='certificacion_control_cotizacion_id' editable={ { validator: jobStatusValidator,type: 'select', options: { values: jobTypesCotizacion } } } filter={ { type: 'NumberFilter', delay: 1000, numberComparators: [ '=', '>', '<=' ] } }>certificacion_control_cotizacion_id</TableHeaderColumn>\n            <TableHeaderColumn dataField='list_docs_id' editable={ { validator: jobStatusValidator,type: 'select', options: { values: jobTypesDocumentos } } } filter={ { type: 'NumberFilter', delay: 1000, numberComparators: [ '=', '>', '<=' ] } }>list_docs_id</TableHeaderColumn>\n            <TableHeaderColumn dataField='porcentajeAvanceAcumulado' editable={ { validator: jobStatusValidator,type: 'input' } } filter={ { type: 'NumberFilter', delay: 1000, numberComparators: [ '=', '>', '<=' ] } }>porcentajeAvanceAcumulado</TableHeaderColumn>\n            <TableHeaderColumn dataField='inputSend' editable={ { validator: jobStatusValidator,type: 'input'} }y>inputSend</TableHeaderColumn>\n        </BootstrapTable>\n      </div>\n    );\n  }\n}\n\n","import React, { Component } from 'react';\nimport FormContainer from \"./certificacionAutomaticaTable\";\nimport SendDataButton from \"./button/sendDataButtonCertificacionAutomatica\";\nexport default class formContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.sendData = this.sendData.bind(this);\n  }\n  handleChange(values) {\n    this.setState({value: values.target.value});\n  }\n  sendData = async (values) =>{\n    this.setState({value: values.target.value});\n  }\n  render() {\n    return (\n      <div className=\"col-md-12\">\n        <h3>Certificacion Automatica</h3>\n        <label>CodigoUnificador:</label>\n        <input type=\"text\" value={this.props.value} onChange={this.handleChange} onKeyUp={this.sendData}/>\n        <FormContainer idSearch={this.state.value}/>\n      </div>\n    );\n  }\n}","import React from 'react';\n\nexport default class sendDataButtonCertificacionAutomatica extends React.Component {\n  render() {\n    return (\n      <div>\n        <button className=\"btn btn-primary\">Buscar</button>\n      </div>\n    )\n  }\n}","/* eslint max-len: 0 */\n/* eslint no-console: 0 */\nimport React from 'react';\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\nimport '../styles/react-bootstrap-table.css';\nimport moment from 'moment';\n\nlet jobs = [];\nlet jobTypesControl = [];\nlet jobTypesCotizacion = [];\nlet jobTypesDocumentos = [];\nlet jobTypesRemitos = [];\n\nconst cellEditProp = {\n  mode: 'click',\n  blurToSave: true,\n  afterSaveCell: onAfterSaveCell\n};\nconst selectRowProp = {\n  mode: 'checkbox'\n};\nfunction jobStatusValidator(value, row) {\n  const nan = isNaN(parseInt(value, 10));\n  if (nan) {\n    return 'Job Status must be a integer!';\n  }\n  return true;\n}\nasync function onAfterSaveCell(row, cellName, cellValue) {\n  if(cellName === \"fecha_envio\"){\n    row.fecha_envio = moment(cellValue).format('YYYY-MM-DD');\n  }\n  const settings = {\n    method: 'PUT',\n    body: JSON.stringify(row),\n    headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n    }\n  };\n  let url = \"/datosRemitos/\" + row.id;\n  try {\n      const fetchResponse = await fetch(url, settings);\n      const data = await fetchResponse.json();\n  } catch (e) {\n      console.log(e);\n  }\n}\nasync function onAfterInsertRow(row) {\n  const settings = {\n    method: 'POST',\n    body: JSON.stringify(row),\n    headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n    }\n  };\n  try {\n      const fetchResponse = await fetch(`/datosRemitos`, settings);\n      const data = await fetchResponse.json();\n  } catch (e) {\n      console.log(e);\n  }\n}\n\nasync function onAfterDeleteRow(rowKeys,rows) {\n  for(let i = 0; i<rowKeys.length; i++){\n    let url = '/datosRemitos/' + rows[i].id;\n    const settings = {\n    method: 'DELETE'\n    };\n    try {\n        const fetchResponse = await fetch(url, settings);\n        const data = await fetchResponse.json();\n    } catch (e) {\n        console.log(e);\n    }\n  }\n}\n\nconst options = {\n  page: 1,  // which page you want to show as default\n  sizePerPageList: [ {\n    text: 5, value: 5\n  },\n  {\n    text: 10, value: 10\n  },\n  {\n    text: 15, value: 15\n  },\n  {\n    text: 20, value: 20\n  },\n  {\n    text: 30, value: 30\n  },\n  {\n    text: 40, value: 40\n  },\n  {\n    text: 50, value: 50\n  }/*,\n  {\n    text: 'All', value: jobs.length\n  }*/ ], // you can change the dropdown list for size per page\n  sizePerPage: 50,  // which size per page you want to locate as default\n  pageStartIndex: 1, // where to start counting the pages\n  paginationSize: 3,  // the pagination bar size.\n  prePage: 'Prev', // Previous page button text\n  nextPage: 'Next', // Next page button text\n  firstPage: 'First', // First page button text\n  lastPage: 'Last', // Last page button text\n  prePageTitle: 'Go to previous', // Previous page button title\n  nextPageTitle: 'Go to next', // Next page button title\n  firstPageTitle: 'Go to first', // First page button title\n  lastPageTitle: 'Go to Last', // Last page button title\n  paginationPosition: 'bottom',  // default is bottom, top and both is all available\n  // keepSizePerPageState: true //default is false, enable will keep sizePerPage dropdown state(open/clode) when external rerender happened\n  // hideSizePerPage: true > You can hide the dropdown for sizePerPage\n  // alwaysShowAllBtns: true // Always show next and previous button\n  // withFirstAndLast: false > Hide the going to First and Last page button\n  // hidePageListOnlyOnePage: true > Hide the page list if only one page.\n  afterDeleteRow: onAfterDeleteRow,\n  afterInsertRow: onAfterInsertRow\n  //handleConfirmDeleteRow: customConfirm REVISTAR CONFIRM\n};\n\nexport default class proyecto extends React.Component {\n  constructor(props) {\n    super(props);\n    this.formatType = this.formatType.bind(this);\n  }\n\n  componentDidMount() {\n    this.callApi()\n      .then(res => this.setState({ response: res }))\n      .catch(err => console.log(err));\n    this.callApiDroopControl()\n      .then(res => this.setState({ response: res }))\n      .catch(err => console.log(err));\n    this.callApiDroopCotizacion()\n      .then(res => this.setState({ response: res }))\n      .catch(err => console.log(err));\n    this.callApiDroopDocumentos()\n      .then(res => this.setState({ response: res }))\n      .catch(err => console.log(err));\n    this.callApiDroopRemitos()\n      .then(res => this.setState({ response: res }))\n      .catch(err => console.log(err));\n  }\n\n  formatType(cell) {\n    return `TYPE_${cell}`;\n  }\n  componentDidUpdate(prevProps) {\n    if (this.props.idSearch !== prevProps.idSearch) {\n        this.callApi();\n    }\n  }\n  callApi = async () => {\n    jobs = [];\n    if(this.props.idSearch){\n      let test = this.props.idSearch;\n      const response = await fetch('/datosRemitos/codigoUnificador/' + test);\n      var data = await response.json();\n      if (response.status !== 200) throw Error(data.message);\n      for (let i = 0; i < data.length; i++) {\n        jobs.push({\n          id: data[i].id,\n          remitos_id: data[i].remitos_id,\n          calificacion: data[i].calificacion,\n          remitos_control_id: data[i].remitos_control_id,\n          list_docs_id: data[i].list_docs_id,\n          remitos_control_cotizacion_id: data[i].remitos_control_cotizacion_id\n        });\n      }\n    }\n  }\n\n  callApiDroopCotizacion = async () => {\n    const response = await fetch('/cotizacion');\n    var data = await response.json();\n    if (response.status !== 200) throw Error(data.message);\n    for (let i = 0; i < data.length; i++) {\n      jobTypesCotizacion.push({\n        value: data[i].id,\n        text: data[i].titulo_cotiazacion\n      });\n    }\n  }\n\n  callApiDroopControl = async () => {\n    const response = await fetch('/control');\n    var data = await response.json();\n    if (response.status !== 200) throw Error(data.message);\n    for (let i = 0; i < data.length; i++) {\n      jobTypesControl.push({\n        value: data[i].id,\n        text: data[i].numero_control\n      });\n    }\n  }\n\n  callApiDroopDocumentos = async () => {\n    const response = await fetch('/list_docs');\n    var data = await response.json();\n    if (response.status !== 200) throw Error(data.message);\n    for (let i = 0; i < data.length; i++) {\n        let mergeNombre = data[i].nombre + \" \" + data[i].titulo_documento;\n        jobTypesDocumentos.push({\n          value: data[i].id,\n          text: mergeNombre\n        });\n    }\n  }\n\n  callApiDroopRemitos = async () => {\n    const response = await fetch('/remitos');\n    var data = await response.json();\n    if (response.status !== 200) throw Error(data.message);\n    for (let i = 0; i < data.length; i++) {\n      jobTypesRemitos.push({\n        value: data[i].id,\n        text: data[i].remito\n      });\n    }\n  }\n\n  render() {\n    return (\n      <BootstrapTable data={ jobs } cellEdit={ cellEditProp } insertRow={ true } pagination={ true } options={ options } exportCSV={ true } deleteRow={ true } selectRow={ selectRowProp }>\n        <TableHeaderColumn dataField='id' isKey={ true } autoValue={ true } filter={ { type: 'NumberFilter', delay: 1000, numberComparators: [ '=', '>', '<=' ] } }>ID</TableHeaderColumn>\n        <TableHeaderColumn dataField='remitos_id' editable={ { validator: jobStatusValidator,type: 'select', options: { values: jobTypesRemitos } } } filter={ { type: 'NumberFilter', delay: 1000, numberComparators: [ '=', '>', '<=' ] } }>remitos_id</TableHeaderColumn>\n        <TableHeaderColumn dataField='remitos_control_id' editable={ { validator: jobStatusValidator,type: 'select', options: { values: jobTypesControl } } } filter={ { type: 'NumberFilter', delay: 1000, numberComparators: [ '=', '>', '<=' ] } }>remitos_control_id</TableHeaderColumn>\n        <TableHeaderColumn dataField='remitos_control_cotizacion_id' editable={ { validator: jobStatusValidator,type: 'select', options: { values: jobTypesCotizacion } } } filter={ { type: 'NumberFilter', delay: 1000, numberComparators: [ '=', '>', '<=' ] } }>remitos_control_cotizacion_id</TableHeaderColumn>\n        <TableHeaderColumn dataField='calificacion' editable={ { type: 'input' } } filter={ { type: 'TextFilter', delay: 1000 } }>calificacion</TableHeaderColumn>\n        <TableHeaderColumn dataField='list_docs_id' editable={ { validator: jobStatusValidator,type: 'select', options: { values: jobTypesDocumentos } } } filter={ { type: 'NumberFilter', delay: 1000, numberComparators: [ '=', '>', '<=' ] } }>list_docs_id</TableHeaderColumn>\n      </BootstrapTable>\n    );\n  }\n}","import React, { Component } from 'react';\nimport FormContainer from \"./SearchRemitosCU\";\n\nexport default class formContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.sendData = this.sendData.bind(this);\n  }\n  handleChange(values) {\n    this.setState({value: values.target.value});\n  }\n  sendData = async (values) =>{\n    this.setState({value: values.target.value});\n  }\n  render() {\n    return (\n      <div className=\"col-md-12\">\n        <h3>Busqueda Remitos Por Codigo Unificador</h3>\n        <label>CodigoUnificador:</label>\n        <input type=\"text\" value={this.props.value} onChange={this.handleChange} onKeyUp={this.sendData}/>\n        <FormContainer idSearch={this.state.value}/>\n      </div>\n    );\n  }\n}","import React, { Component } from 'react';\nimport SortableTree from 'react-sortable-tree';\nimport 'react-sortable-tree/style.css'; // This only needs to be imported once in your app\nexport default class Tree extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      treeData:[],\n      id_control:[],\n      control_data:[],\n      id_cotizacion:[],\n      id_remito:[],\n      cotizaicon_data:[]\n    };\n    this.searchData = this.searchData.bind(this);\n    this.getAllDocsForCotizacion = this.getAllDocsForCotizacion.bind(this);\n    this.getAllDocsForControl = this.getAllDocsForControl.bind(this);\n  }\n\n  getAllDocsForCotizacion = async () => {\n    const mapCotizacion = new Map();\n    const cotizacionData = [];\n    let data = {\"id\":this.state.id_cotizacion};\n    const settings = {\n      method: 'POST',\n      body: JSON.stringify(data),\n      headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json',\n      }\n    };\n    try {\n        const fetchResponse = await fetch(`/cotizacion/getListDocsFormCotizacion`, settings);\n        const data = await fetchResponse.json();\n        let dataMapValue = data.map(function (data, index, array) {\n          if(!mapCotizacion.has(data.cotizacion_id)){\n            mapCotizacion.set(data.cotizacion_id, true);    // set any value to Map\n            cotizacionData.push({\n                title:data.titulo_cotiazacion,\n                cotizacionIdlId:data.cotizacionId,\n                children:[]\n              });\n          }\n          return {id:data.id,title:data.nombre,idContizacion:data.cotizacionId};\n        });\n        for(let i = 0;i<cotizacionData.length;i++){\n          cotizacionData[i].children = dataMapValue;\n        }\n    } catch (e) {\n        console.log(e);\n    }\n    return cotizacionData;\n  }\n\n  getAllDocsForControl = async () =>{\n    const mapControl = new Map();\n    const controlData = [];\n    let data = {\"id\":this.state.id_cotizacion};\n    const settings = {\n      method: 'POST',\n      body: JSON.stringify(data),\n      headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json',\n      }\n    };\n    try {\n        const fetchResponse = await fetch(`/control/getListDocsFormCotizacion`, settings);\n        const data = await fetchResponse.json();\n        let dataMapValue = data.map(function (data, index, array) {\n          if(!mapControl.has(data.contro_id)){\n            mapControl.set(data.contro_id, true);    // set any value to Map\n              controlData.push({\n                title:data.numero_control,\n                controlId:data.controlId,\n                children:[]\n              });\n          }\n          return {id:data.id,title:data.nombre,idControl: data.controlId};\n        });\n        for(let i = 0;i<controlData.length;i++){\n          controlData[i].children = dataMapValue;\n        }\n    } catch (e) {\n        console.log(e);\n    }\n    return controlData;\n  }\n\n  searchData = async () => {\n      let data = {\"id\":this.props.changeLink};\n      const settings = {\n        method: 'POST',\n        body: JSON.stringify(data),\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n        }\n      };\n    try {\n        const fetchResponse = await fetch('/remitos/dataFromRemitos', settings);\n        let data = await fetchResponse.json();\n        let response = this.formatData(data);\n        for(let i = 0; i<response.length;i++){\n          this.setState({id_cotizacion: response[i].idCotizacion,id_control:response[i].idControl})\n          let docsCotizacion = this.getAllDocsForCotizacion();\n          docsCotizacion.then(result => {\n            for(let a = 0;a<result.length;a++){\n              response.push(result[a]);\n            }\n          });\n          let docsControl = this.getAllDocsForControl();\n          docsControl.then(result => {\n            for(let a = 0;a<result.length;a++){\n              response.push(result[a]);\n            }\n          });\n        }\n        this.setState({treeData: response});\n    } catch (e) {\n        console.log(e);\n    }\n  }\n\n  formatData(data){\n  let dataMapValue = data.map(function (data, index, array) {\n    return {remitoId:data.id,title:data.remito,idControl:data.control_id,idCotizacion:data.control_cotizacion_id};\n  });\n  return dataMapValue;\n  }\n\n  render() {\n    return (\n      <div style={{ height: 400 }}>\n        <SortableTree\n          treeData={this.state.treeData}\n          onChange={treeData => this.setState({ treeData })}\n        />\n        <button onClick={this.searchData} className=\"btn btn-primary\">Buscar</button>\n      </div>\n    );\n  }\n}","import React from \"react\";\n\n/* Import Components */\nimport Tree from \"../TreeRemitos\";\n\nexport default class NameForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n  handleChange(values) {\n    this.setState({value: values.target.value});\n  }\n  render() {\n    return (\n      <div>\n      <form onSubmit={this.handleSubmit}>\n        <label>\n          Name:\n          <input type=\"text\" value={this.state.value} onChange={this.handleChange} />\n        </label>\n      </form>\n      <Tree changeLink={this.state.value}/>\n      </div>\n    );\n  }\n}","import React, { Component } from 'react';\nimport FormContainer from \"./form/SearchRemitos\";\n\nexport default class formContainer extends Component {\n  render() {\n    return (\n      <div className=\"col-md-6\">\n        <h3>Busqueda por Remitos</h3>\n        <FormContainer />\n      </div>\n    );\n  }\n}","import React, { Component } from 'react';\nimport SortableTree from 'react-sortable-tree';\nimport 'react-sortable-tree/style.css'; // This only needs to be imported once in your app\nexport default class TreeCertificacion extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      treeData:[],\n      idControl:0,\n      id_certifiacion:[],\n      certificacion_data:[]\n    };\n    this.searchData = this.searchData.bind(this);\n    this.getAllDocsForCertificacion = this.getAllDocsForCertificacion.bind(this);\n  }\n\n  searchData = async () => {\n    let dataId = {\"id\":this.props.changeLink};\n    let response;\n    const settings = {\n      method: 'POST',\n      body: JSON.stringify(dataId),\n      headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json',\n      }\n    };\n    try {\n        const fetchResponse = await fetch(`/certificacion/dataById`, settings);\n        const data = await fetchResponse.json();\n        response = this.formatData(data);\n        for(let i = 0;i<response.length;i++){\n            this.setState({idControl: response[i].controId})\n        }\n        let docsCotizacion = this.getAllDocsForCertificacion();\n        docsCotizacion.then(result => {\n            for(let i = 0;i<response.length;i++){\n                response[i].children = result;\n            }\n        });\n        this.setState({treeData: response});\n    } catch (e) {\n        console.log(e);\n    }\n  }\n\n  getAllDocsForCertificacion = async () =>{\n    let data = {id:this.state.idControl};\n    const settings = {\n        method: 'POST',\n        body: JSON.stringify(data),\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n        }\n    };\n    try {\n        const fetchResponse = await fetch(`/control/getListDocsFormControl`, settings);\n        const data = await fetchResponse.json();\n        let dataMapValue = data.map(function (data, index, array) {\n            return {id:data.id,title:data.nombre,idControl: data.controlId};\n        });\n        return dataMapValue;\n    } catch (e) {\n        console.log(e);\n    }\n  }\n\n  formatData(data){\n    let clienteData = [];\n    for(let i = 0;i<data.length;i++){\n        clienteData.push({\n            certificacionId: data[i].id,\n            title: data[i].nombre,\n            controId: data[i].control_id,\n            children:[]\n        });\n    }\n    return clienteData;\n  }\n\n  render() {\n    return (\n      <div style={{ height: 400 }}>\n        <SortableTree\n          treeData={this.state.treeData}\n          onChange={treeData => this.setState({ treeData })}\n        />\n        <button onClick={this.searchData} className=\"btn btn-primary\">Buscar</button>\n      </div>\n    );\n  }\n}","import React, { Component } from 'react';\nimport 'react-sortable-tree/style.css'; // This only needs to be imported once in your app\nexport default class doCertificacion extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      certificacion_data:[],\n      id:[],\n      idSend:0,\n      porcentajeAvanceSend:0,\n      porcentajeAvance:[]\n    };\n    this.certificarData = this.certificarData.bind(this);\n    this.updateAvance = this.updateAvance.bind(this);\n  }\n\n  updateAvance = async () => {\n    let test = this.state.porcentajeAvance;\n    for(let i = 0; i< test.length;i++){\n        let dataId = {\"porcentajeAvance\":this.state.porcentajeAvance[i],\"id\":this.state.id[i]};\n        const settings = {\n        method: 'POST',\n        body: JSON.stringify(dataId),\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n        }\n        };\n        try {\n            const fetchResponse = await fetch(`/datosCertificacion/updateAvance`, settings);\n            const data = await fetchResponse.json();\n        } catch (e) {\n            console.log(e);\n        }\n    }\n  }\n  certificarData = async () => {\n    let array1 = [];\n    let array2 = [];\n    let dataId = {\"id\":this.props.changeLink};\n    const settings = {\n      method: 'POST',\n      body: JSON.stringify(dataId),\n      headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json',\n      }\n    };\n    try {\n        const fetchResponse = await fetch(`/datosCertificacion/dataById`, settings);\n        const data = await fetchResponse.json();\n        let response = data.map(function(data, index, array){\n            return {id:data.id,porcentajeAvance:data.porcentajeAvance};\n        });\n        for(let i = 0; i<response.length;i++){\n            array1.push(response[i].id);\n            array2.push(response[i].porcentajeAvance);\n            this.setState({id:array1,porcentajeAvance:array2})\n        }\n        this.setState({certificacion_data: [...data]})\n    } catch (e) {\n        console.log(e);\n    }\n  }\n\n  listItems() {\n    return (\n        this.state.certificacion_data.map(function(items, index, array){\n            return <div key={index}><label/>{items.nombre}<input id={this.state.id[index]} defaultValue={this.state.porcentajeAvance[index]}/></div>;\n          },this)\n    );\n  }\n\n  render() {\n    return (\n      <div style={{ height: 600 }}>\n        <button onClick={this.certificarData} className=\"btn btn-primary\">Agregar Avance</button>\n        <button onClick={this.updateAvance} className=\"btn btn-secondary\">Certificar</button>\n        { this.listItems() }\n      </div>\n    );\n  }\n}","import React from \"react\";\n\n/* Import Components */\nimport Tree from \"../TreeCertificacion\";\nimport DoCertificacion from \"../doCertificacion\";\nexport default class NameForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n  handleChange(values) {\n    this.setState({value: values.target.value});\n  }\n  render() {\n    return (\n      <div>\n      <form onSubmit={this.handleSubmit}>\n        <label>\n          Name:\n          <input type=\"text\" value={this.state.value} onChange={this.handleChange} />\n        </label>\n      </form>\n      <Tree changeLink={this.state.value}/>\n      <DoCertificacion changeLink={this.state.value}/>\n      </div>\n    );\n  }\n}","import React, { Component } from 'react';\nimport FormContainer from \"./form/SearchCertificacion\";\n\nexport default class formContainer extends Component {\n  render() {\n    return (\n      <div className=\"col-md-6\">\n        <h3>Busqueda por Certificacion</h3>\n        <FormContainer />\n      </div>\n    );\n  }\n}","import React, { Component } from 'react';\nimport SideBar from './components/SideBar';\nimport Cliente from './components/Cliente';\nimport Certificacion from './components/Certificacion';\nimport Control from './components/Control';\nimport Cotizacion from './components/Cotizacion';\nimport DatosControl from './components/DatosControl';\nimport DatosCotiazacion from './components/DatosCotizacion';\nimport List_docs from './components/List_docs';\nimport Proyecto from './components/Proyecto';\nimport Remitos from './components/Remitos';\nimport DatosRemitos from './components/DatosRemitos';\nimport DatosCertificacion from './components/DatosCertificacion';\nimport codigoUnificadorContainer from './components/codigoUnificadorContainer';\nimport generarDatosControlContainer from './components/generarDatosControlContainer';\nimport certificacionAutomatica from './components/certificacionAutomatica';\nimport searchRemitosCodUni from './components/searchRemitosCodUni';\nimport searchRemitos from './components/searchRemitos';\nimport searchCertificacion from './components/searchCertificacion';\nimport {\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nexport default class App extends Component {\nrender() {\n    return (\n      <div className=\"container-fluid h-100\">\n      <div className=\"row\">\n        <div id=\"sideBar\" className=\"col-sm-2\"><SideBar /></div>\n        <div id=\"Container\" className=\"col-md-10\">\n        <Switch>\n          <Route exact path=\"/\" component={Proyecto} />\n          <Route path=\"/Cliente\" component={Cliente} />\n          <Route path=\"/Certificacion\" component={Certificacion} />\n          <Route path=\"/Control\" component={Control} />\n          <Route path=\"/Cotizacion\" component={Cotizacion} />\n          <Route path=\"/DatosControl\" component={DatosControl} />\n          <Route path=\"/DatosCotizacion\" component={DatosCotiazacion} />\n          <Route path=\"/ListDocs\" component={List_docs} />\n          <Route path=\"/Remitos\" component={Remitos} />\n          <Route path=\"/DatosCertificacion\" component={DatosCertificacion} />\n          <Route path=\"/DatosRemitos\" component={DatosRemitos} />\n          <Route path=\"/codigoUnificadorContainer\" component={codigoUnificadorContainer} />\n          <Route path=\"/generarDatosControlContainer\" component={generarDatosControlContainer} />\n          <Route path=\"/certificacionAutomatica\" component={certificacionAutomatica} />\n          <Route path=\"/searchRemitosCodUni\" component={searchRemitosCodUni} />\n          <Route path=\"/searchRemitos\" component={searchRemitos} />\n          <Route path=\"/searchCertificacion\" component={searchCertificacion} />\n        </Switch>\n        </div>\n      </div>\n    </div>\n    );\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import NavBar from './components/NavBar';\nimport App from  './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(<Router><App /></Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}